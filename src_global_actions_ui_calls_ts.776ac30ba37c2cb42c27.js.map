{"version":3,"file":"src_global_actions_ui_calls_ts.776ac30ba37c2cb42c27.js","mappings":"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","sources":["webpack://telegram-t/./src/global/actions/api/chats.ts","webpack://telegram-t/./src/global/actions/ui/calls.ts","webpack://telegram-t/./src/global/reducers/calls.ts"],"sourcesContent":["import type {\n  ApiChat, ApiChatFolder, ApiChatlistExportedInvite,\n  ApiChatMember, ApiError, ApiMissingInvitedUser,\n  ApiTopic,\n} from '../../../api/types';\nimport type { RequiredGlobalActions } from '../../index';\nimport type {\n  ActionReturnType, GlobalState, TabArgs,\n} from '../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport {\n  ChatCreationProgress,\n  type ChatListType,\n  ManagementProgress,\n  NewChatMembersProgress,\n  SettingsScreens,\n  type ThreadId,\n} from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVED_FOLDER_ID,\n  CHAT_LIST_LOAD_SLICE,\n  DEBUG,\n  GLOBAL_SUGGESTED_CHANNELS_ID,\n  MAX_INT_32,\n  RE_TG_LINK,\n  SAVED_FOLDER_ID,\n  SERVICE_NOTIFICATIONS_USER_ID,\n  TME_WEB_DOMAINS,\n  TMP_CHAT_ID,\n  TOP_CHAT_MESSAGES_PRELOAD_LIMIT,\n  TOPICS_SLICE,\n  TOPICS_SLICE_SECOND_LOAD,\n} from '../../../config';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatShareText, processDeepLink } from '../../../util/deeplink';\nimport { isDeepLink } from '../../../util/deepLinkParser';\nimport { isUserId } from '../../../util/entities/ids';\nimport { getCurrentTabId } from '../../../util/establishMultitabRole';\nimport { getOrderedIds } from '../../../util/folderManager';\nimport {\n  buildCollectionByKey, omit, pick, unique,\n} from '../../../util/iteratees';\nimport { isLocalMessageId } from '../../../util/keys/messageKey';\nimport * as langProvider from '../../../util/oldLangProvider';\nimport { debounce, pause, throttle } from '../../../util/schedulers';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { callApi } from '../../../api/gramjs';\nimport {\n  getIsSavedDialog,\n  isChatArchived,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n} from '../../helpers';\nimport {\n  addActionHandler, getGlobal, setGlobal,\n} from '../../index';\nimport {\n  addChatListIds,\n  addChatMembers,\n  addChats,\n  addMessages,\n  addNotifyExceptions,\n  addSimilarBots,\n  addUsers,\n  addUserStatuses,\n  deleteChatMessages,\n  deletePeerPhoto,\n  deleteTopic,\n  leaveChat,\n  removeChatFromChatLists,\n  replaceChatFullInfo,\n  replaceChatListIds,\n  replaceChatListLoadingParameters,\n  replaceMessages,\n  replaceNotifyExceptions,\n  replaceSimilarChannels,\n  replaceThreadParam,\n  replaceUserStatuses,\n  toggleSimilarChannels,\n  updateChat,\n  updateChatFullInfo,\n  updateChatLastMessageId,\n  updateChatListSecondaryInfo,\n  updateChats,\n  updateChatsLastMessageId,\n  updateListedTopicIds,\n  updateManagementProgress,\n  updateMissingInvitedUsers,\n  updatePeerFullInfo,\n  updateThread,\n  updateThreadInfo,\n  updateTopic,\n  updateTopics,\n  updateUser,\n  updateUsers,\n} from '../../reducers';\nimport { updateGroupCall } from '../../reducers/calls';\nimport { updateTabState } from '../../reducers/tabs';\nimport {\n  selectChat,\n  selectChatByUsername,\n  selectChatFolder,\n  selectChatFullInfo,\n  selectChatLastMessageId,\n  selectChatListLoadingParameters,\n  selectChatListType,\n  selectChatMessages,\n  selectCurrentChat,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsChatPinned,\n  selectIsChatWithSelf,\n  selectIsCurrentUserFrozen,\n  selectLastServiceNotification,\n  selectPeer,\n  selectSimilarChannelIds,\n  selectStickerSet,\n  selectSupportChat,\n  selectTabState,\n  selectThread,\n  selectThreadInfo,\n  selectTopic,\n  selectTopics,\n  selectTopicsInfo,\n  selectUser,\n  selectUserByPhoneNumber,\n} from '../../selectors';\nimport { selectGroupCall } from '../../selectors/calls';\nimport { selectCurrentLimit } from '../../selectors/limits';\n\nconst TOP_CHAT_MESSAGES_PRELOAD_INTERVAL = 100;\nconst INFINITE_LOOP_MARKER = 100;\n\nconst CHATLIST_LIMIT_ERROR_LIST = new Set([\n  'FILTERS_TOO_MUCH',\n  'CHATLISTS_TOO_MUCH',\n  'INVITES_TOO_MUCH',\n]);\n\nconst runThrottledForLoadTopChats = throttle((cb) => cb(), 3000, true);\nconst runDebouncedForLoadFullChat = debounce((cb) => cb(), 500, false, true);\n\naddActionHandler('preloadTopChatMessages', async (global, actions): Promise<void> => {\n  const preloadedChatIds = new Set<string>();\n\n  for (let i = 0; i < TOP_CHAT_MESSAGES_PRELOAD_LIMIT; i++) {\n    await pause(TOP_CHAT_MESSAGES_PRELOAD_INTERVAL);\n\n    global = getGlobal();\n    const currentChatIds = Object.values(global.byTabId)\n\n      .map(({ id: tabId }) => selectCurrentMessageList(global, tabId)?.chatId)\n      .filter(Boolean);\n\n    const folderAllOrderedIds = getOrderedIds(ALL_FOLDER_ID);\n    const nextChatId = folderAllOrderedIds?.find((id) => !currentChatIds.includes(id) && !preloadedChatIds.has(id));\n    if (!nextChatId) {\n      return;\n    }\n\n    preloadedChatIds.add(nextChatId);\n\n    actions.loadViewportMessages({ chatId: nextChatId, threadId: MAIN_THREAD_ID, tabId: getCurrentTabId() });\n  }\n});\n\nfunction abortChatRequests(chatId: string, threadId?: ThreadId) {\n  callApi('abortChatRequests', { chatId, threadId });\n}\n\nfunction abortChatRequestsForCurrentChat<T extends GlobalState>(\n  global: T, newChatId?: string, newThreadId?: ThreadId,\n  ...[tabId = getCurrentTabId()]: TabArgs<T>\n) {\n  const currentMessageList = selectCurrentMessageList(global, tabId);\n  const currentChatId = currentMessageList?.chatId;\n  const currentThreadId = currentMessageList?.threadId;\n\n  if (currentChatId && (currentChatId !== newChatId || currentThreadId !== newThreadId)) {\n    const [isChatOpened, isThreadOpened] = Object.values(global.byTabId)\n      .reduce(([accHasChatOpened, accHasThreadOpened], { id: otherTabId }) => {\n        if (otherTabId === tabId || (accHasChatOpened && accHasThreadOpened)) {\n          return [accHasChatOpened, accHasThreadOpened];\n        }\n\n        const otherMessageList = selectCurrentMessageList(global, otherTabId);\n        const isSameChat = otherMessageList?.chatId === currentChatId;\n        const isSameThread = isSameChat && otherMessageList?.threadId === currentThreadId;\n\n        return [accHasChatOpened || isSameChat, accHasThreadOpened || isSameThread];\n      }, [currentChatId === newChatId, false]);\n\n    const shouldAbortChatRequests = !isChatOpened || !isThreadOpened;\n\n    if (shouldAbortChatRequests) {\n      abortChatRequests(currentChatId, isChatOpened ? currentThreadId : undefined);\n    }\n  }\n}\n\naddActionHandler('openChat', (global, actions, payload): ActionReturnType => {\n  const {\n    id, type, noForumTopicPanel, shouldReplaceHistory, shouldReplaceLast,\n    tabId = getCurrentTabId(),\n  } = payload;\n\n  actions.processOpenChatOrThread({\n    chatId: id,\n    type,\n    threadId: MAIN_THREAD_ID,\n    noForumTopicPanel,\n    shouldReplaceHistory,\n    shouldReplaceLast,\n    tabId,\n  });\n\n  abortChatRequestsForCurrentChat(global, id, MAIN_THREAD_ID, tabId);\n\n  if (!id || id === TMP_CHAT_ID) {\n    return;\n  }\n\n  const chat = selectChat(global, id);\n\n  if (chat?.hasUnreadMark) {\n    actions.markChatRead({ id });\n  }\n\n  const isChatOnlySummary = !selectChatLastMessageId(global, id);\n\n  if (!chat) {\n    if (selectIsChatWithSelf(global, id)) {\n      void callApi('fetchChat', { type: 'self' });\n    } else {\n      const user = selectUser(global, id);\n      if (user) {\n        void callApi('fetchChat', { type: 'user', user });\n      }\n    }\n  } else if (isChatOnlySummary && !chat.isMin) {\n    actions.requestChatUpdate({ chatId: id });\n  }\n});\n\naddActionHandler('openSavedDialog', (global, actions, payload): ActionReturnType => {\n  const { chatId, tabId = getCurrentTabId(), ...otherParams } = payload;\n\n  actions.openThread({\n    chatId: global.currentUserId!,\n    threadId: chatId,\n    tabId,\n    ...otherParams,\n  });\n});\n\naddActionHandler('openThread', async (global, actions, payload): Promise<void> => {\n  const {\n    type, isComments, noForumTopicPanel, shouldReplaceHistory, shouldReplaceLast,\n    focusMessageId,\n    tabId = getCurrentTabId(),\n  } = payload;\n  let { chatId } = payload;\n  let threadId: ThreadId | undefined;\n  let loadingChatId: string;\n  let loadingThreadId: ThreadId;\n\n  if (!isComments) {\n    loadingChatId = payload.chatId;\n    threadId = payload.threadId;\n    loadingThreadId = threadId;\n\n    const originalChat = selectChat(global, loadingChatId);\n    if (threadId === MAIN_THREAD_ID) {\n      actions.openChat({\n        id: chatId,\n        type,\n        noForumTopicPanel,\n        shouldReplaceHistory,\n        shouldReplaceLast,\n        tabId,\n      });\n      return;\n    } else if (originalChat?.isForum || (chatId && getIsSavedDialog(chatId, threadId, global.currentUserId))) {\n      actions.processOpenChatOrThread({\n        chatId,\n        type,\n        threadId,\n        isComments,\n        noForumTopicPanel,\n        shouldReplaceHistory,\n        shouldReplaceLast,\n        tabId,\n      });\n      return;\n    }\n  } else {\n    const { originChannelId, originMessageId } = payload;\n\n    loadingChatId = originChannelId;\n    loadingThreadId = originMessageId;\n  }\n\n  const chat = selectChat(global, loadingChatId);\n  const threadInfo = selectThreadInfo(global, loadingChatId, loadingThreadId);\n  const thread = selectThread(global, loadingChatId, loadingThreadId);\n  if (!chat) return;\n\n  abortChatRequestsForCurrentChat(global, loadingChatId, loadingThreadId, tabId);\n\n  if (chatId\n    && threadInfo?.threadId\n    && (isComments || (thread?.listedIds?.length && thread.listedIds.includes(Number(threadInfo.threadId))))) {\n    global = updateTabState(global, {\n      loadingThread: undefined,\n    }, tabId);\n    setGlobal(global);\n    actions.processOpenChatOrThread({\n      chatId,\n      type,\n      threadId: threadInfo.threadId,\n      isComments,\n      noForumTopicPanel,\n      shouldReplaceHistory,\n      shouldReplaceLast,\n      tabId,\n    });\n    return;\n  }\n\n  let { loadingThread } = selectTabState(global, tabId);\n  if (loadingThread) {\n    abortChatRequests(loadingThread.loadingChatId, loadingThread.loadingMessageId);\n  }\n\n  global = updateTabState(global, {\n    loadingThread: {\n      loadingChatId,\n      loadingMessageId: Number(loadingThreadId),\n    },\n  }, tabId);\n  setGlobal(global);\n\n  const openPreviousChat = () => {\n    const currentGlobal = getGlobal();\n    if (isComments\n      || selectCurrentMessageList(currentGlobal, tabId)?.chatId !== loadingChatId\n      || selectCurrentMessageList(currentGlobal, tabId)?.threadId !== loadingThreadId) {\n      return;\n    }\n    actions.openPreviousChat({ tabId });\n  };\n\n  if (!isComments) {\n    actions.processOpenChatOrThread({\n      chatId,\n      type,\n      threadId: threadId!,\n      tabId,\n      isComments,\n      noForumTopicPanel,\n      shouldReplaceHistory,\n      shouldReplaceLast,\n    });\n  }\n\n  const result = selectIsCurrentUserFrozen(global) ? undefined\n    : await callApi('fetchDiscussionMessage', {\n      chat: selectChat(global, loadingChatId)!,\n      messageId: Number(loadingThreadId),\n    });\n\n  global = getGlobal();\n  loadingThread = selectTabState(global, tabId).loadingThread;\n  if (loadingThread?.loadingChatId !== loadingChatId || loadingThread?.loadingMessageId !== loadingThreadId) {\n    openPreviousChat();\n    return;\n  }\n\n  if (!result) {\n    global = updateTabState(global, {\n      loadingThread: undefined,\n    }, tabId);\n    setGlobal(global);\n\n    actions.showNotification({\n      message: langProvider.oldTranslate(isComments ? 'ChannelPostDeleted' : 'lng_message_not_found'),\n      tabId,\n    });\n\n    openPreviousChat();\n    return;\n  }\n\n  threadId ??= result.threadId;\n  chatId ??= result.chatId;\n\n  if (!chatId) {\n    openPreviousChat();\n    return;\n  }\n\n  global = getGlobal();\n  global = addMessages(global, result.messages);\n  if (isComments) {\n    global = updateThreadInfo(global, loadingChatId, loadingThreadId, {\n      threadId,\n    });\n\n    global = updateThreadInfo(global, chatId, threadId, {\n      isCommentsInfo: false,\n      threadId,\n      chatId,\n      fromChannelId: loadingChatId,\n      fromMessageId: loadingThreadId,\n      ...(threadInfo\n        && pick(threadInfo, ['messagesCount', 'lastMessageId', 'lastReadInboxMessageId', 'recentReplierIds'])),\n    });\n  }\n  global = updateThread(global, chatId, threadId, {\n    firstMessageId: result.firstMessageId,\n  });\n  setGlobal(global);\n\n  if (focusMessageId) {\n    actions.focusMessage({\n      chatId,\n      threadId,\n      messageId: focusMessageId,\n      tabId,\n    });\n  }\n\n  actions.loadViewportMessages({\n    chatId,\n    threadId,\n    tabId,\n    onError: () => {\n      global = getGlobal();\n      global = updateTabState(global, {\n        loadingThread: undefined,\n      }, tabId);\n      setGlobal(global);\n\n      actions.showNotification({\n        message: langProvider.oldTranslate('Group.ErrorAccessDenied'),\n        tabId,\n      });\n    },\n    onLoaded: () => {\n      global = getGlobal();\n      loadingThread = selectTabState(global, tabId).loadingThread;\n      if (loadingThread?.loadingChatId !== loadingChatId || loadingThread?.loadingMessageId !== loadingThreadId) {\n        return;\n      }\n\n      global = updateTabState(global, {\n        loadingThread: undefined,\n      }, tabId);\n      setGlobal(global);\n\n      actions.processOpenChatOrThread({\n        chatId,\n        type,\n        threadId,\n        tabId,\n        isComments,\n        noForumTopicPanel,\n        shouldReplaceHistory,\n        shouldReplaceLast,\n      });\n    },\n  });\n});\n\naddActionHandler('openLinkedChat', async (global, actions, payload): Promise<void> => {\n  const { id, tabId = getCurrentTabId() } = payload;\n  const chat = selectChat(global, id);\n  if (!chat) {\n    return;\n  }\n\n  const chatFullInfo = await callApi('fetchFullChat', chat);\n\n  if (chatFullInfo?.fullInfo?.linkedChatId) {\n    actions.openChat({ id: chatFullInfo.fullInfo.linkedChatId, tabId });\n  }\n});\n\naddActionHandler('openSupportChat', async (global, actions, payload): Promise<void> => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  const chat = selectSupportChat(global);\n  if (chat) {\n    actions.openChat({ id: chat.id, shouldReplaceHistory: true, tabId });\n    return;\n  }\n\n  actions.openChat({ id: TMP_CHAT_ID, shouldReplaceHistory: true, tabId });\n\n  const result = await callApi('fetchChat', { type: 'support' });\n  if (result) {\n    actions.openChat({ id: result.chatId, shouldReplaceHistory: true, tabId });\n  }\n});\n\naddActionHandler('loadAllChats', async (global, actions, payload): Promise<void> => {\n  const { whenFirstBatchDone } = payload;\n  const listType = payload.listType;\n  let isCallbackFired = false;\n  let i = 0;\n\n  while (!global.chats.isFullyLoaded[listType]) {\n    if (i++ >= INFINITE_LOOP_MARKER) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.error('`actions/loadAllChats`: Infinite loop detected');\n      }\n\n      return;\n    }\n\n    global = getGlobal();\n\n    if (global.connectionState !== 'connectionStateReady' || global.authState !== 'authorizationStateReady') {\n      return;\n    }\n\n    await loadChats(\n      listType,\n      true,\n    );\n\n    if (!isCallbackFired) {\n      await whenFirstBatchDone?.();\n      isCallbackFired = true;\n    }\n\n    global = getGlobal();\n  }\n});\n\naddActionHandler('loadPinnedDialogs', async (global, actions, payload): Promise<void> => {\n  const {\n    listType,\n  } = payload;\n\n  const result = await callApi('fetchPinnedDialogs', { listType });\n  if (!result) return;\n\n  const { dialogIds, messages, chats, users } = result;\n\n  global = getGlobal();\n  global = updateChats(global, buildCollectionByKey(chats, 'id'));\n  global = updateUsers(global, buildCollectionByKey(users, 'id'));\n  global = replaceMessages(global, messages);\n\n  global = {\n    ...global,\n    chats: {\n      ...global.chats,\n      orderedPinnedIds: {\n        ...global.chats.orderedPinnedIds,\n        [listType]: dialogIds.length ? dialogIds : undefined,\n      },\n    },\n  };\n\n  setGlobal(global);\n});\n\naddActionHandler('loadFullChat', (global, actions, payload): ActionReturnType => {\n  const {\n    chatId, force, withPhotos,\n  } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  const loadChat = async () => {\n    await loadFullChat(global, actions, chat);\n    if (withPhotos) {\n      actions.loadMoreProfilePhotos({ peerId: chatId, shouldInvalidateCache: true });\n    }\n  };\n\n  if (force) {\n    void loadChat();\n  } else {\n    runDebouncedForLoadFullChat(loadChat);\n  }\n});\n\naddActionHandler('invalidateFullInfo', (global, actions, payload): ActionReturnType => {\n  const { peerId } = payload;\n\n  const isUser = isUserId(peerId);\n\n  if (isUser) {\n    return {\n      ...global,\n      users: {\n        ...global.users,\n        fullInfoById: omit(global.users.fullInfoById, [peerId]),\n      },\n    };\n  }\n\n  return {\n    ...global,\n    chats: {\n      ...global.chats,\n      fullInfoById: omit(global.chats.fullInfoById, [peerId]),\n    },\n  };\n});\n\naddActionHandler('loadTopChats', (): ActionReturnType => {\n  runThrottledForLoadTopChats(() => {\n    loadChats('active', undefined, true);\n    loadChats('archived', undefined, true);\n  });\n});\n\naddActionHandler('requestChatUpdate', (global, actions, payload): ActionReturnType => {\n  const { chatId } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  void callApi('requestChatUpdate', {\n    chat,\n    ...(chatId === SERVICE_NOTIFICATIONS_USER_ID && {\n      lastLocalMessage: selectLastServiceNotification(global)?.message,\n    }),\n  });\n});\n\naddActionHandler('requestSavedDialogUpdate', async (global, actions, payload): Promise<void> => {\n  const { chatId } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  const result = await callApi('fetchMessages', {\n    chat,\n    isSavedDialog: true,\n    limit: 1,\n  });\n\n  if (!result) return;\n\n  global = getGlobal();\n\n  global = addMessages(global, result.messages);\n\n  if (result.messages.length) {\n    global = updateChatLastMessageId(global, chatId, result.messages[0].id, 'saved');\n    global = addChatListIds(global, 'saved', [chatId]);\n\n    setGlobal(global);\n  } else {\n    global = removeChatFromChatLists(global, chatId, 'saved');\n\n    setGlobal(global);\n\n    Object.values(global.byTabId).forEach(({ id: tabId }) => {\n      const currentMessageList = selectCurrentMessageList(global, tabId);\n      if (!currentMessageList) return;\n      const { chatId: tabChatId, threadId } = currentMessageList;\n\n      if (selectIsChatWithSelf(global, tabChatId) && threadId === chatId) {\n        actions.openChat({ id: undefined, tabId });\n      }\n    });\n  }\n});\n\naddActionHandler('updateChatMutedState', (global, actions, payload): ActionReturnType => {\n  const { chatId, isMuted } = payload;\n  let { mutedUntil } = payload;\n\n  if (selectIsCurrentUserFrozen(global)) {\n    actions.openFrozenAccountModal({ tabId: getCurrentTabId() });\n    return;\n  }\n\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    return;\n  }\n  if (isMuted && !mutedUntil) {\n    mutedUntil = MAX_INT_32;\n  }\n\n  void callApi('updateChatNotifySettings', { chat, settings: { mutedUntil } });\n});\n\naddActionHandler('updateChatSilentPosting', (global, actions, payload): ActionReturnType => {\n  const { chatId, isEnabled } = payload;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  void callApi('updateChatNotifySettings', { chat, settings: { isSilentPosting: isEnabled } });\n});\n\naddActionHandler('updateTopicMutedState', (global, actions, payload): ActionReturnType => {\n  const {\n    chatId, topicId, isMuted, mutedUntil,\n  } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  void callApi('updateTopicMutedState', {\n    chat, topicId, isMuted, mutedUntil,\n  });\n});\n\naddActionHandler('createChannel', async (global, actions, payload): Promise<void> => {\n  const {\n    title, about, photo, memberIds, discussionChannelId, tabId = getCurrentTabId(),\n  } = payload;\n  const isChannel = 'isChannel' in payload ? payload.isChannel : undefined;\n  const isSuperGroup = 'isSuperGroup' in payload ? payload.isSuperGroup : undefined;\n\n  const users = memberIds?.map((id) => selectUser(global, id))\n    .filter(Boolean);\n\n  global = updateTabState(global, {\n    chatCreation: {\n      progress: ChatCreationProgress.InProgress,\n    },\n  }, tabId);\n  setGlobal(global);\n\n  let createdChannel: ApiChat | undefined;\n  let missingInvitedUsers: ApiMissingInvitedUser[] | undefined;\n  try {\n    const result = await callApi('createChannel', {\n      title,\n      about,\n      users,\n      isBroadcast: isChannel,\n      isMegagroup: isSuperGroup,\n    });\n    createdChannel = result?.channel;\n    missingInvitedUsers = result?.missingUsers;\n  } catch (error) {\n    global = getGlobal();\n\n    global = updateTabState(global, {\n      chatCreation: {\n        progress: ChatCreationProgress.Error,\n      },\n    }, tabId);\n\n    setGlobal(global);\n\n    if ((error as ApiError).message === 'CHANNELS_TOO_MUCH') {\n      actions.openLimitReachedModal({ limit: 'channels', tabId });\n    } else {\n      actions.showDialog({ data: { ...(error as ApiError), hasErrorKey: true }, tabId });\n    }\n  }\n\n  if (!createdChannel) {\n    return;\n  }\n\n  const { id: channelId, accessHash } = createdChannel;\n\n  global = getGlobal();\n  global = updateChat(global, channelId, createdChannel);\n  global = updateTabState(global, {\n    chatCreation: {\n      ...selectTabState(global, tabId).chatCreation,\n      progress: createdChannel ? ChatCreationProgress.Complete : ChatCreationProgress.Error,\n    },\n  }, tabId);\n  setGlobal(global);\n  if (discussionChannelId && channelId) {\n    actions.linkDiscussionGroup({\n      channelId: discussionChannelId,\n      chatId: channelId,\n      tabId,\n    });\n  }\n  actions.openChat({ id: channelId, shouldReplaceHistory: true, tabId });\n\n  if (missingInvitedUsers) {\n    global = getGlobal();\n    global = updateMissingInvitedUsers(global, channelId, missingInvitedUsers, tabId);\n    setGlobal(global);\n  }\n\n  if (channelId && accessHash && photo) {\n    await callApi('editChatPhoto', { chatId: channelId, accessHash, photo });\n  }\n});\n\naddActionHandler('joinChannel', async (global, actions, payload): Promise<void> => {\n  const { chatId, tabId = getCurrentTabId() } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  const { id: channelId, accessHash } = chat;\n\n  if (!(channelId && accessHash)) {\n    return;\n  }\n\n  try {\n    await callApi('joinChannel', { channelId, accessHash });\n  } catch (error) {\n    if ((error as ApiError).message === 'CHANNELS_TOO_MUCH') {\n      actions.openLimitReachedModal({ limit: 'channels', tabId });\n    } else {\n      actions.showDialog({ data: { ...(error as ApiError), hasErrorKey: true }, tabId });\n    }\n  }\n});\n\naddActionHandler('deleteChatUser', (global, actions, payload): ActionReturnType => {\n  const {\n    chatId, userId, shouldRevokeHistory, tabId = getCurrentTabId(),\n  } = payload;\n  const chat = selectChat(global, chatId);\n  const user = selectUser(global, userId);\n  if (!chat || !user) {\n    return;\n  }\n\n  global = leaveChat(global, chatId);\n  setGlobal(global);\n\n  if (selectCurrentMessageList(global, tabId)?.chatId === chatId) {\n    actions.openChat({ id: undefined, tabId });\n  }\n\n  void callApi('deleteChatUser', { chat, user, shouldRevokeHistory });\n});\n\naddActionHandler('deleteChat', (global, actions, payload): ActionReturnType => {\n  const { chatId, tabId = getCurrentTabId() } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  global = leaveChat(global, chatId);\n  setGlobal(global);\n\n  if (selectCurrentMessageList(global, tabId)?.chatId === chatId) {\n    actions.openChat({ id: undefined, tabId });\n  }\n\n  void callApi('deleteChat', { chatId: chat.id });\n});\n\naddActionHandler('leaveChannel', async (global, actions, payload): Promise<void> => {\n  const { chatId, tabId = getCurrentTabId() } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  global = leaveChat(global, chatId);\n  setGlobal(global);\n\n  if (selectCurrentMessageList(global, tabId)?.chatId === chatId) {\n    actions.openChat({ id: undefined, tabId });\n  }\n\n  const { id: channelId, accessHash } = chat;\n  if (channelId && accessHash) {\n    await callApi('leaveChannel', { channelId, accessHash });\n    global = getGlobal();\n    const chatMessages = selectChatMessages(global, chatId);\n    const localMessageIds = Object.keys(chatMessages).map(Number).filter(isLocalMessageId);\n    global = deleteChatMessages(global, chatId, localMessageIds);\n    setGlobal(global);\n  }\n});\n\naddActionHandler('deleteChannel', (global, actions, payload): ActionReturnType => {\n  const { chatId, tabId = getCurrentTabId() } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  global = leaveChat(global, chatId);\n  setGlobal(global);\n\n  if (selectCurrentMessageList(global, tabId)?.chatId === chatId) {\n    actions.openChat({ id: undefined, tabId });\n  }\n\n  const { id: channelId, accessHash } = chat;\n  if (channelId && accessHash) {\n    void callApi('deleteChannel', { channelId, accessHash });\n  }\n});\n\naddActionHandler('createGroupChat', async (global, actions, payload): Promise<void> => {\n  const {\n    title, memberIds, photo, tabId = getCurrentTabId(),\n  } = payload;\n  const users = (memberIds)\n    .map((id) => selectUser(global, id))\n    .filter(Boolean);\n\n  global = updateTabState(global, {\n    chatCreation: {\n      progress: ChatCreationProgress.InProgress,\n    },\n  }, tabId);\n  setGlobal(global);\n\n  try {\n    const { chat: createdChat, missingUsers } = await callApi('createGroupChat', {\n      title,\n      users,\n    }) ?? {};\n\n    if (!createdChat) {\n      return;\n    }\n\n    const { id: chatId } = createdChat;\n\n    global = getGlobal();\n    global = updateChat(global, chatId, createdChat);\n    global = updateTabState(global, {\n      chatCreation: {\n        ...selectTabState(global, tabId).chatCreation,\n        progress: createdChat ? ChatCreationProgress.Complete : ChatCreationProgress.Error,\n      },\n    }, tabId);\n    setGlobal(global);\n    actions.openChat({\n      id: chatId,\n      shouldReplaceHistory: true,\n      tabId,\n    });\n\n    if (missingUsers) {\n      global = getGlobal();\n      global = updateMissingInvitedUsers(global, chatId, missingUsers, tabId);\n      setGlobal(global);\n    }\n\n    if (chatId && photo) {\n      await callApi('editChatPhoto', {\n        chatId,\n        photo,\n      });\n    }\n  } catch (err) {\n    if ((err as ApiError).message === 'USERS_TOO_FEW') {\n      global = getGlobal();\n      global = updateTabState(global, {\n        chatCreation: {\n          ...selectTabState(global, tabId).chatCreation,\n          progress: ChatCreationProgress.Error,\n          error: 'CreateGroupError',\n        },\n      }, tabId);\n      setGlobal(global);\n    }\n  }\n});\n\naddActionHandler('toggleChatPinned', (global, actions, payload): ActionReturnType => {\n  const { id, folderId, tabId = getCurrentTabId() } = payload;\n\n  if (selectIsCurrentUserFrozen(global)) {\n    actions.openFrozenAccountModal({ tabId });\n    return;\n  }\n  const chat = selectChat(global, id);\n  if (!chat) {\n    return;\n  }\n\n  const limit = selectCurrentLimit(global, 'dialogFolderPinned');\n\n  if (folderId) {\n    const folder = selectChatFolder(global, folderId);\n    if (folder) {\n      const shouldBePinned = !selectIsChatPinned(global, id, folderId);\n\n      const { pinnedChatIds, includedChatIds } = folder;\n      const newPinnedIds = shouldBePinned\n        ? [id, ...(pinnedChatIds || [])]\n        : (pinnedChatIds || []).filter((pinnedId) => pinnedId !== id);\n\n      // With both Pin and Unpin we need to re-add a user to the included group\n      const newIncludedChatIds = [id, ...includedChatIds];\n\n      void callApi('editChatFolder', {\n        id: folderId,\n        folderUpdate: {\n          ...folder,\n          pinnedChatIds: newPinnedIds,\n          includedChatIds: newIncludedChatIds,\n        },\n      });\n    }\n  } else {\n    const listType = selectChatListType(global, id);\n    const isPinned = selectIsChatPinned(global, id, listType === 'archived' ? ARCHIVED_FOLDER_ID : undefined);\n\n    const ids = global.chats.orderedPinnedIds[listType === 'archived' ? 'archived' : 'active'];\n    if ((ids?.length || 0) >= limit && !isPinned) {\n      actions.openLimitReachedModal({\n        limit: 'dialogFolderPinned',\n        tabId,\n      });\n      return;\n    }\n    void callApi('toggleChatPinned', { chat, shouldBePinned: !isPinned });\n  }\n});\n\naddActionHandler('toggleChatArchived', (global, actions, payload): ActionReturnType => {\n  const { id } = payload;\n\n  if (selectIsCurrentUserFrozen(global)) {\n    actions.openFrozenAccountModal({ tabId: getCurrentTabId() });\n    return;\n  }\n\n  const chat = selectChat(global, id);\n  if (chat) {\n    void callApi('toggleChatArchived', {\n      chat,\n      folderId: isChatArchived(chat) ? 0 : ARCHIVED_FOLDER_ID,\n    });\n  }\n});\n\naddActionHandler('toggleSavedDialogPinned', (global, actions, payload): ActionReturnType => {\n  const { id, tabId = getCurrentTabId() } = payload;\n\n  if (selectIsCurrentUserFrozen(global)) {\n    actions.openFrozenAccountModal({ tabId });\n    return;\n  }\n\n  const chat = selectChat(global, id);\n  if (!chat) {\n    return;\n  }\n\n  const limit = selectCurrentLimit(global, 'savedDialogsPinned');\n\n  const isPinned = selectIsChatPinned(global, id, SAVED_FOLDER_ID);\n\n  const ids = global.chats.orderedPinnedIds.saved;\n  if ((ids?.length || 0) >= limit && !isPinned) {\n    actions.openLimitReachedModal({\n      limit: 'savedDialogsPinned',\n      tabId,\n    });\n    return;\n  }\n  void callApi('toggleSavedDialogPinned', { chat, shouldBePinned: !isPinned });\n});\n\naddActionHandler('loadChatFolders', async (global): Promise<void> => {\n  const chatFolders = await callApi('fetchChatFolders');\n\n  if (chatFolders) {\n    global = getGlobal();\n\n    global = {\n      ...global,\n      chatFolders: {\n        ...global.chatFolders,\n        ...chatFolders,\n      },\n    };\n    setGlobal(global);\n  }\n});\n\naddActionHandler('loadRecommendedChatFolders', async (global): Promise<void> => {\n  const recommendedChatFolders = await callApi('fetchRecommendedChatFolders');\n\n  if (recommendedChatFolders) {\n    global = getGlobal();\n\n    global = {\n      ...global,\n      chatFolders: {\n        ...global.chatFolders,\n        recommended: recommendedChatFolders,\n      },\n    };\n    setGlobal(global);\n  }\n});\n\naddActionHandler('editChatFolders', (global, actions, payload): ActionReturnType => {\n  const {\n    chatId, idsToRemove, idsToAdd, tabId = getCurrentTabId(),\n  } = payload;\n  const limit = selectCurrentLimit(global, 'dialogFiltersChats');\n\n  const isLimitReached = idsToAdd\n    .some((id) => selectChatFolder(global, id).includedChatIds.length >= limit);\n  if (isLimitReached) {\n    actions.openLimitReachedModal({ limit: 'dialogFiltersChats', tabId });\n    return;\n  }\n\n  idsToRemove.forEach((id) => {\n    const folder = selectChatFolder(global, id);\n    if (folder) {\n      callApi('editChatFolder', {\n        id,\n        folderUpdate: {\n          ...folder,\n          pinnedChatIds: folder.pinnedChatIds?.filter((pinnedId) => pinnedId !== chatId),\n          includedChatIds: folder.includedChatIds.filter((includedId) => includedId !== chatId),\n        },\n      });\n    }\n  });\n\n  idsToAdd.forEach((id) => {\n    const folder = selectChatFolder(global, id);\n    if (folder) {\n      callApi('editChatFolder', {\n        id,\n        folderUpdate: {\n          ...folder,\n          includedChatIds: folder.includedChatIds.concat(chatId),\n        },\n      });\n    }\n  });\n});\n\naddActionHandler('editChatFolder', (global, actions, payload): ActionReturnType => {\n  const { id, folderUpdate } = payload;\n  const folder = selectChatFolder(global, id);\n\n  if (folder) {\n    void callApi('editChatFolder', {\n      id,\n      folderUpdate: {\n        id,\n        emoticon: folder.emoticon,\n        pinnedChatIds: folder.pinnedChatIds,\n        ...folderUpdate,\n      },\n    });\n  }\n});\n\naddActionHandler('addChatFolder', async (global, actions, payload): Promise<void> => {\n  const { folder, tabId = getCurrentTabId() } = payload;\n  const { orderedIds, byId } = global.chatFolders;\n\n  const limit = selectCurrentLimit(global, 'dialogFilters');\n  if (Object.keys(byId).length >= limit) {\n    actions.openLimitReachedModal({\n      limit: 'dialogFilters',\n      tabId,\n    });\n    return;\n  }\n\n  const maxId = Math.max(...(orderedIds || []), ARCHIVED_FOLDER_ID);\n\n  // Clear fields from recommended folders\n  const { id: recommendedId, description, ...newFolder } = folder;\n\n  const newId = maxId + 1;\n  const folderUpdate = {\n    id: newId,\n    ...newFolder,\n  };\n  await callApi('editChatFolder', {\n    id: newId,\n    folderUpdate,\n  });\n\n  // Update called from the above `callApi` is throttled, but we need to apply changes immediately\n  actions.apiUpdate({\n    '@type': 'updateChatFolder',\n    id: newId,\n    folder: folderUpdate,\n  });\n\n  actions.requestNextFoldersAction({\n    foldersAction: {\n      type: 'setFolderId',\n      payload: maxId + 1,\n    },\n    tabId,\n  });\n\n  if (!description) {\n    return;\n  }\n\n  global = getGlobal();\n  const { recommended } = global.chatFolders;\n\n  if (recommended) {\n    global = {\n      ...global,\n      chatFolders: {\n        ...global.chatFolders,\n        recommended: recommended.filter(({ id }) => id !== recommendedId),\n      },\n    };\n    setGlobal(global);\n  }\n});\n\naddActionHandler('sortChatFolders', async (global, actions, payload): Promise<void> => {\n  const { folderIds } = payload;\n\n  const result = await callApi('sortChatFolders', folderIds);\n  if (result) {\n    global = getGlobal();\n    global = {\n      ...global,\n      chatFolders: {\n        ...global.chatFolders,\n        orderedIds: folderIds,\n      },\n    };\n    setGlobal(global);\n  }\n});\n\naddActionHandler('deleteChatFolder', async (global, actions, payload): Promise<void> => {\n  const { id } = payload;\n  const folder = selectChatFolder(global, id);\n\n  if (folder) {\n    await callApi('deleteChatFolder', id);\n  }\n});\n\naddActionHandler('markChatUnread', (global, actions, payload): ActionReturnType => {\n  const { id } = payload;\n\n  if (selectIsCurrentUserFrozen(global)) {\n    actions.openFrozenAccountModal({ tabId: getCurrentTabId() });\n    return;\n  }\n  const chat = selectChat(global, id);\n  if (!chat) return;\n  void callApi('toggleDialogUnread', {\n    chat,\n    hasUnreadMark: !chat.hasUnreadMark,\n  });\n});\n\naddActionHandler('markChatMessagesRead', async (global, actions, payload): Promise<void> => {\n  if (selectIsCurrentUserFrozen(global)) return;\n  const { id } = payload;\n\n  if (selectIsCurrentUserFrozen(global)) {\n    actions.openFrozenAccountModal({ tabId: getCurrentTabId() });\n    return;\n  }\n\n  const chat = selectChat(global, id);\n  if (!chat) return;\n  if (!chat.isForum) {\n    await callApi('markMessageListRead', { chat, threadId: MAIN_THREAD_ID });\n    actions.readAllMentions({ chatId: id });\n    actions.readAllReactions({ chatId: id });\n    if (chat.hasUnreadMark) {\n      actions.markChatRead({ id });\n    }\n    return;\n  }\n\n  let hasMoreTopics = true;\n  let lastTopic: ApiTopic | undefined;\n  let processedCount = 0;\n\n  while (hasMoreTopics) {\n    const result = await callApi('fetchTopics', {\n      chat, offsetDate: lastTopic?.date, offsetTopicId: lastTopic?.id, offsetId: lastTopic?.lastMessageId, limit: 100,\n    });\n\n    if (!result?.topics?.length) return;\n\n    result.topics.forEach((topic) => {\n      if (!topic.unreadCount && !topic.unreadMentionsCount && !topic.unreadReactionsCount) return;\n      actions.markTopicRead({ chatId: id, topicId: topic.id });\n    });\n\n    lastTopic = result.topics[result.topics.length - 1];\n    processedCount += result.topics.length;\n    if (result.count <= processedCount) {\n      hasMoreTopics = false;\n    }\n  }\n});\n\naddActionHandler('markChatRead', (global, actions, payload): ActionReturnType => {\n  const { id } = payload;\n  const chat = selectChat(global, id);\n  if (!chat) return;\n\n  callApi('toggleDialogUnread', {\n    chat,\n    hasUnreadMark: !chat.hasUnreadMark,\n  });\n});\n\naddActionHandler('markTopicRead', (global, actions, payload): ActionReturnType => {\n  if (selectIsCurrentUserFrozen(global)) return;\n  const { chatId, topicId } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n\n  const topic = selectTopic(global, chatId, topicId);\n\n  const lastTopicMessageId = topic?.lastMessageId;\n  if (!lastTopicMessageId) return;\n\n  void callApi('markMessageListRead', {\n    chat,\n    threadId: topicId,\n    maxId: lastTopicMessageId,\n  });\n  actions.readAllMentions({ chatId, threadId: topicId });\n  actions.readAllReactions({ chatId, threadId: topicId });\n\n  global = getGlobal();\n  global = updateTopic(global, chatId, topicId, {\n    unreadCount: 0,\n  });\n  global = updateThreadInfo(global, chatId, topicId, {\n    lastReadInboxMessageId: lastTopicMessageId,\n  });\n  setGlobal(global);\n});\n\naddActionHandler('checkChatInvite', async (global, actions, payload): Promise<void> => {\n  const { hash, tabId = getCurrentTabId() } = payload;\n\n  const result = await callApi('checkChatInvite', hash);\n  if (!result) {\n    return;\n  }\n\n  global = getGlobal();\n\n  if (result.users) {\n    global = addUsers(global, buildCollectionByKey(result.users, 'id'));\n  }\n\n  if (result.chat) {\n    global = addChats(global, buildCollectionByKey([result.chat], 'id'));\n    setGlobal(global);\n    actions.openChat({ id: result.chat.id, tabId });\n    return;\n  }\n\n  if (result.invite.subscriptionFormId) {\n    global = updateTabState(global, {\n      starsPayment: {\n        inputInvoice: {\n          type: 'chatInviteSubscription',\n          hash,\n        },\n        subscriptionInfo: result.invite,\n        status: 'pending',\n      },\n    }, tabId);\n    setGlobal(global);\n    return;\n  }\n\n  global = updateTabState(global, {\n    chatInviteModal: {\n      hash,\n      inviteInfo: result.invite,\n    },\n  }, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('openChatByPhoneNumber', async (global, actions, payload): Promise<void> => {\n  const {\n    phoneNumber, startAttach, attach, text, tabId = getCurrentTabId(),\n  } = payload;\n\n  // Open temporary empty chat to make the click response feel faster\n  actions.openChat({ id: TMP_CHAT_ID, tabId });\n\n  const chat = await fetchChatByPhoneNumber(global, phoneNumber);\n  if (!chat) {\n    actions.openPreviousChat({ tabId });\n    actions.showNotification({\n      message: langProvider.oldTranslate('lng_username_by_phone_not_found').replace('{phone}', phoneNumber),\n      tabId,\n    });\n    return;\n  }\n\n  if (text) {\n    actions.openChatWithDraft({ chatId: chat.id, text: { text }, tabId });\n  } else {\n    actions.openChat({ id: chat.id, tabId });\n  }\n\n  if (attach) {\n    global = getGlobal();\n    openAttachMenuFromLink(global, actions, chat.id, attach, startAttach, tabId);\n  }\n});\n\naddActionHandler('openTelegramLink', async (global, actions, payload): Promise<void> => {\n  const {\n    url,\n    shouldIgnoreCache,\n    tabId = getCurrentTabId(),\n  } = payload;\n\n  const {\n    openChatByPhoneNumber,\n    checkChatInvite,\n    openStickerSet,\n    openChatWithDraft,\n    joinVoiceChatByLink,\n    openInvoice,\n    checkChatlistInvite,\n    openChatByUsername: openChatByUsernameAction,\n    openStoryViewerByUsername,\n    checkGiftCode,\n  } = actions;\n\n  if (isDeepLink(url)) {\n    const isProcessed = processDeepLink(url);\n    if (isProcessed || url.match(RE_TG_LINK)) {\n      return;\n    }\n  }\n\n  const uri = new URL(url.toLowerCase().startsWith('http') ? url : `https://${url}`);\n  if (TME_WEB_DOMAINS.has(uri.hostname) && uri.pathname === '/') {\n    window.open(uri.toString(), '_blank', 'noopener');\n    return;\n  }\n\n  const hostname = TME_WEB_DOMAINS.has(uri.hostname) ? 't.me' : uri.hostname;\n  const hostParts = hostname.split('.');\n  if (hostParts.length > 3) return;\n\n  const adaptedPathname = uri.pathname.replace(/^\\/?s\\//, '');\n  const pathname = hostParts.length === 3 ? `${hostParts[0]}/${adaptedPathname}` : adaptedPathname;\n  const [part1, part2, part3] = pathname.split('/').filter(Boolean).map((part) => decodeURI(part));\n  const params = Object.fromEntries(uri.searchParams);\n\n  let hash: string | undefined;\n  if (part1 === 'joinchat') {\n    hash = part2;\n  }\n\n  const storyId = part2 === 's' && (Number(part3) || undefined);\n\n  if (part1.match(/^\\+([0-9]+)(\\?|$)/)) {\n    openChatByPhoneNumber({\n      phoneNumber: part1.substr(1, part1.length - 1),\n      startAttach: params.startattach,\n      attach: params.attach,\n      text: params.text,\n      tabId,\n    });\n    return;\n  }\n\n  if (storyId) {\n    openStoryViewerByUsername({\n      username: part1,\n      storyId,\n      tabId,\n    });\n\n    return;\n  }\n\n  if (part1.startsWith(' ') || part1.startsWith('+')) {\n    hash = part1.substr(1, part1.length - 1);\n  }\n\n  if (hash) {\n    checkChatInvite({ hash, tabId });\n    return;\n  }\n\n  if (part1 === 'addstickers' || part1 === 'addemoji') {\n    openStickerSet({\n      stickerSetInfo: {\n        shortName: part2,\n      },\n      shouldIgnoreCache,\n      tabId,\n    });\n    return;\n  }\n\n  if (part1 === 'share') {\n    const text = formatShareText(params.url, params.text);\n    openChatWithDraft({ text, tabId });\n    return;\n  }\n\n  if (part1 === 'addlist') {\n    const slug = part2;\n    checkChatlistInvite({ slug, tabId });\n    return;\n  }\n\n  if (part1 === 'giftcode') {\n    const slug = part2;\n    checkGiftCode({ slug, tabId });\n    return;\n  }\n\n  const chatOrChannelPostId = part2 || undefined;\n  const messageId = part3 ? Number(part3) : undefined;\n  const commentId = params.comment ? Number(params.comment) : undefined;\n\n  const isWebApp = await checkWebAppExists(global, part1, part2);\n\n  const shouldTryOpenChat = (part1 && !part2) || Number.isInteger(Number(part2)) || isWebApp;\n\n  if (params.hasOwnProperty('voicechat') || params.hasOwnProperty('livestream')) {\n    joinVoiceChatByLink({\n      username: part1,\n      inviteHash: params.voicechat || params.livestream,\n      tabId,\n    });\n  } else if (part1.startsWith('$')) {\n    openInvoice({\n      type: 'slug',\n      slug: part1.substring(1),\n      tabId,\n    });\n  } else if (part1 === 'invoice') {\n    openInvoice({\n      type: 'slug',\n      slug: part2,\n      tabId,\n    });\n  } else if (shouldTryOpenChat) {\n    openChatByUsernameAction({\n      username: part1,\n      messageId: messageId || Number(chatOrChannelPostId),\n      threadId: messageId ? Number(chatOrChannelPostId) : undefined,\n      commentId,\n      startParam: params.start,\n      startAttach: params.startattach,\n      attach: params.attach,\n      startApp: params.startapp,\n      mode: params.mode,\n      originalParts: [part1, part2, part3],\n      tabId,\n    });\n  } else {\n    actions.openUrl({\n      url, shouldSkipModal: true, tabId, ignoreDeepLinks: true,\n    });\n  }\n});\n\naddActionHandler('processBoostParameters', async (global, actions, payload): Promise<void> => {\n  const { usernameOrId, isPrivate, tabId = getCurrentTabId() } = payload;\n\n  let chat: ApiChat | undefined;\n\n  if (isPrivate) {\n    chat = selectChat(global, usernameOrId);\n    if (!chat) {\n      actions.showNotification({ message: { key: 'PrivateChannelInaccessible' }, tabId });\n      return;\n    }\n  } else {\n    chat = await fetchChatByUsername(global, usernameOrId);\n    if (!chat) {\n      actions.showNotification({ message: { key: 'NoUsernameFound' }, tabId });\n      return;\n    }\n  }\n\n  if (!isChatChannel(chat) && !isChatSuperGroup(chat)) {\n    actions.openChat({ id: chat.id, tabId });\n    return;\n  }\n\n  actions.openBoostModal({\n    chatId: chat.id,\n    tabId,\n  });\n});\n\naddActionHandler('acceptChatInvite', async (global, actions, payload): Promise<void> => {\n  const { hash, tabId = getCurrentTabId() } = payload;\n  const result = await callApi('importChatInvite', { hash });\n  if (!result) {\n    return;\n  }\n\n  actions.openChat({ id: result.id, tabId });\n});\n\naddActionHandler('openChatByUsername', async (global, actions, payload): Promise<void> => {\n  const {\n    username, messageId, commentId, startParam, startAttach, attach, threadId, originalParts, startApp, mode,\n    text, onChatChanged, choose, ref, timestamp,\n    tabId = getCurrentTabId(),\n  } = payload;\n\n  const chat = selectCurrentChat(global, tabId);\n  const webAppName = originalParts?.[1];\n  const isWebApp = webAppName && !Number(webAppName) && !originalParts?.[2];\n\n  if (!commentId) {\n    if (startAttach === undefined && messageId && !startParam && !ref\n      && chat?.usernames?.some((c) => c.username === username)) {\n      actions.focusMessage({\n        chatId: chat.id, threadId, messageId, timestamp, tabId,\n      });\n      return;\n    }\n\n    if (startAttach !== undefined && choose) {\n      actions.processAttachBotParameters({\n        username,\n        filter: choose,\n        startParam: startAttach || startApp,\n        tabId,\n      });\n      return;\n    }\n\n    if (startApp !== undefined && !webAppName) {\n      const theme = extractCurrentThemeParams();\n      const chatByUsername = await fetchChatByUsername(global, username);\n      global = getGlobal();\n      const user = chatByUsername && selectUser(global, chatByUsername.id);\n      if (!chatByUsername || !chat || !user?.hasMainMiniApp) return;\n      actions.requestMainWebView({\n        botId: chatByUsername.id,\n        peerId: chat.id,\n        theme,\n        startParam: startApp,\n        mode,\n        tabId,\n      });\n      return;\n    }\n    if (!isWebApp) {\n      await openChatByUsername(\n        global, actions, {\n          username,\n          threadId,\n          channelPostId: messageId,\n          startParam,\n          ref,\n          startAttach,\n          attach,\n          text,\n          timestamp,\n        }, tabId,\n      );\n      if (onChatChanged) {\n        // @ts-ignore\n        actions[onChatChanged.action](onChatChanged.payload);\n      }\n      return;\n    }\n  }\n\n  const usernameChat = selectChatByUsername(global, username);\n  if (commentId && messageId && usernameChat) {\n    actions.openThread({\n      isComments: true,\n      originChannelId: usernameChat.id,\n      originMessageId: messageId,\n      tabId,\n      focusMessageId: commentId,\n    });\n    if (timestamp) {\n      actions.openMediaFromTimestamp({\n        chatId: usernameChat.id,\n        messageId: commentId,\n        timestamp,\n        tabId,\n      });\n    }\n    return;\n  }\n\n  if (!isWebApp) actions.openChat({ id: TMP_CHAT_ID, tabId });\n\n  const chatByUsername = await fetchChatByUsername(global, username);\n\n  if (!chatByUsername) return;\n\n  if (isWebApp && chatByUsername) {\n    const theme = extractCurrentThemeParams();\n\n    actions.requestAppWebView({\n      appName: webAppName,\n      botId: chatByUsername.id,\n      tabId,\n      startApp,\n      mode,\n      theme,\n    });\n    return;\n  }\n\n  if (!messageId) return;\n\n  actions.openThread({\n    isComments: true,\n    originChannelId: chatByUsername.id,\n    originMessageId: messageId,\n    tabId,\n    focusMessageId: commentId,\n  });\n\n  if (timestamp) {\n    actions.openMediaFromTimestamp({\n      chatId: chatByUsername.id,\n      messageId: commentId || messageId,\n      timestamp,\n      tabId,\n    });\n  }\n\n  if (onChatChanged) {\n    // @ts-ignore\n    actions[onChatChanged.action](onChatChanged.payload);\n  }\n});\n\naddActionHandler('openPrivateChannel', (global, actions, payload): ActionReturnType => {\n  const {\n    id, commentId, messageId, threadId, timestamp, tabId = getCurrentTabId(),\n  } = payload;\n  const chat = selectChat(global, id);\n  if (!chat) {\n    actions.showNotification({\n      message: {\n        key: 'PrivateChannelInaccessible',\n      },\n      tabId,\n    });\n    return;\n  }\n\n  if (!commentId && !messageId && !threadId) {\n    actions.openChat({ id, tabId });\n    return;\n  }\n\n  if (timestamp) {\n    actions.openMediaFromTimestamp({\n      chatId: id,\n      messageId: commentId || messageId!,\n      timestamp,\n      tabId,\n    });\n  }\n\n  if (commentId && messageId) {\n    actions.openThread({\n      isComments: true,\n      originChannelId: id,\n      originMessageId: messageId,\n      tabId,\n      focusMessageId: commentId,\n    });\n    return;\n  }\n\n  openChatWithParams(global, actions, chat, {\n    messageId,\n    threadId,\n    timestamp,\n  }, tabId);\n});\n\naddActionHandler('togglePreHistoryHidden', async (global, actions, payload): Promise<void> => {\n  const {\n    chatId, isEnabled,\n    tabId = getCurrentTabId(),\n  } = payload;\n\n  const chat = await ensureIsSuperGroup(global, actions, chatId, tabId);\n  if (!chat) {\n    return;\n  }\n\n  global = getGlobal();\n  global = updateChatFullInfo(global, chat.id, { isPreHistoryHidden: isEnabled });\n  setGlobal(global);\n\n  void callApi('togglePreHistoryHidden', { chat, isEnabled });\n});\n\naddActionHandler('updateChatDefaultBannedRights', (global, actions, payload): ActionReturnType => {\n  const { chatId, bannedRights } = payload;\n  const chat = selectChat(global, chatId);\n\n  if (!chat) {\n    return;\n  }\n\n  void callApi('updateChatDefaultBannedRights', { chat, bannedRights });\n});\n\naddActionHandler('updateChatMemberBannedRights', async (global, actions, payload): Promise<void> => {\n  const {\n    chatId, userId, bannedRights,\n    tabId = getCurrentTabId(),\n  } = payload;\n\n  const user = selectUser(global, userId);\n\n  if (!user) {\n    return;\n  }\n\n  const chat = await ensureIsSuperGroup(global, actions, chatId, tabId);\n\n  if (!chat) return;\n\n  await callApi('updateChatMemberBannedRights', { chat, user, bannedRights });\n\n  global = getGlobal();\n\n  const updatedFullInfo = selectChatFullInfo(global, chat.id);\n  if (!updatedFullInfo) {\n    return;\n  }\n\n  const { members, kickedMembers } = updatedFullInfo;\n\n  const isBanned = Boolean(bannedRights.viewMessages);\n  const isUnblocked = !Object.keys(bannedRights).length;\n\n  global = updateChatFullInfo(global, chat.id, {\n    ...(members && isBanned && {\n      members: members.filter((m) => m.userId !== userId),\n    }),\n    ...(members && !isBanned && {\n      members: members.map((m) => (\n        m.userId === userId\n          ? { ...m, bannedRights }\n          : m\n      )),\n    }),\n    ...(isUnblocked && kickedMembers && {\n      kickedMembers: kickedMembers.filter((m) => m.userId !== userId),\n    }),\n  });\n  setGlobal(global);\n});\n\naddActionHandler('updateChatAdmin', async (global, actions, payload): Promise<void> => {\n  if (selectIsCurrentUserFrozen(global)) return;\n\n  const {\n    chatId, userId, adminRights, customTitle,\n    tabId = getCurrentTabId(),\n  } = payload;\n\n  const user = selectUser(global, userId);\n  if (!user) {\n    return;\n  }\n\n  const chat = await ensureIsSuperGroup(global, actions, chatId, tabId);\n\n  if (!chat) return;\n\n  await callApi('updateChatAdmin', {\n    chat, user, adminRights, customTitle,\n  });\n\n  const chatAfterUpdate = await callApi('fetchFullChat', chat);\n  if (!chatAfterUpdate?.fullInfo) {\n    return;\n  }\n\n  const { adminMembersById } = chatAfterUpdate.fullInfo;\n  const isDismissed = !Object.keys(adminRights).length;\n  let newAdminMembersById: Record<string, ApiChatMember> | undefined;\n  if (adminMembersById) {\n    if (isDismissed) {\n      const { [userId]: remove, ...rest } = adminMembersById;\n      newAdminMembersById = rest;\n    } else {\n      newAdminMembersById = {\n        ...adminMembersById,\n        [userId]: {\n          ...adminMembersById[userId],\n          adminRights,\n          customTitle,\n        },\n      };\n    }\n  }\n\n  if (newAdminMembersById) {\n    global = getGlobal();\n    global = updateChatFullInfo(global, chat.id, { adminMembersById: newAdminMembersById });\n    setGlobal(global);\n  }\n});\n\naddActionHandler('updateChat', async (global, actions, payload): Promise<void> => {\n  const {\n    chatId, title, about, photo, tabId = getCurrentTabId(),\n  } = payload;\n\n  const chat = selectChat(global, chatId);\n  const fullInfo = selectChatFullInfo(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  global = getGlobal();\n  global = updateManagementProgress(global, ManagementProgress.InProgress, tabId);\n  setGlobal(global);\n\n  await Promise.all([\n    chat.title !== title\n      ? callApi('updateChatTitle', chat, title)\n      : undefined,\n    fullInfo?.about !== about\n      ? callApi('updateChatAbout', chat, about)\n      : undefined,\n    photo\n      ? callApi('editChatPhoto', { chatId, accessHash: chat.accessHash, photo })\n      : undefined,\n  ]);\n\n  global = getGlobal();\n  global = updateManagementProgress(global, ManagementProgress.Complete, tabId);\n  setGlobal(global);\n\n  if (photo) {\n    actions.loadFullChat({ chatId, withPhotos: true });\n  }\n});\n\naddActionHandler('updateChatPhoto', async (global, actions, payload): Promise<void> => {\n  const { photo, chatId } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n\n  await callApi('editChatPhoto', {\n    chatId,\n    accessHash: chat.accessHash,\n    photo,\n  });\n  actions.loadFullChat({ chatId, withPhotos: true });\n});\n\naddActionHandler('deleteChatPhoto', async (global, actions, payload): Promise<void> => {\n  const { photo, chatId } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n\n  let isDeleted;\n  if (photo.id === chat.avatarPhotoId) {\n    isDeleted = await callApi('editChatPhoto', {\n      chatId,\n      accessHash: chat.accessHash,\n    });\n  } else {\n    isDeleted = await callApi('deleteProfilePhotos', [photo]);\n  }\n  if (!isDeleted) return;\n\n  global = getGlobal();\n  global = deletePeerPhoto(global, chatId, photo.id);\n  setGlobal(global);\n\n  actions.loadFullChat({ chatId, withPhotos: true });\n});\n\naddActionHandler('toggleSignatures', (global, actions, payload): ActionReturnType => {\n  const { chatId, areProfilesEnabled, areSignaturesEnabled } = payload;\n  const chat = selectChat(global, chatId);\n\n  if (!chat) {\n    return;\n  }\n\n  void callApi('toggleSignatures', { chat, areProfilesEnabled, areSignaturesEnabled });\n});\n\naddActionHandler('loadGroupsForDiscussion', async (global): Promise<void> => {\n  const groups = await callApi('fetchGroupsForDiscussion');\n  if (!groups) {\n    return;\n  }\n\n  const addedById = groups.reduce((result, group) => {\n    if (group && !group.isForum) {\n      result[group.id] = group;\n    }\n\n    return result;\n  }, {} as Record<string, ApiChat>);\n\n  global = getGlobal();\n  global = {\n    ...global,\n    chats: {\n      ...global.chats,\n      forDiscussionIds: Object.keys(addedById),\n    },\n  };\n  setGlobal(global);\n});\n\naddActionHandler('linkDiscussionGroup', async (global, actions, payload): Promise<void> => {\n  if (selectIsCurrentUserFrozen(global)) return;\n  const { channelId, chatId, tabId = getCurrentTabId() } = payload || {};\n\n  const channel = selectChat(global, channelId);\n  if (!channel) {\n    return;\n  }\n\n  const chat = await ensureIsSuperGroup(global, actions, chatId, tabId);\n\n  if (!chat) return;\n\n  let fullInfo = selectChatFullInfo(global, chat.id);\n  if (!fullInfo) {\n    const fullChat = await callApi('fetchFullChat', chat);\n    if (!fullChat) {\n      return;\n    }\n\n    fullInfo = fullChat.fullInfo;\n  }\n\n  if (fullInfo.isPreHistoryHidden) {\n    global = getGlobal();\n    global = updateChatFullInfo(global, chat.id, { isPreHistoryHidden: false });\n    setGlobal(global);\n\n    await callApi('togglePreHistoryHidden', { chat, isEnabled: false });\n  }\n\n  void callApi('setDiscussionGroup', { channel, chat });\n});\n\naddActionHandler('unlinkDiscussionGroup', async (global, actions, payload): Promise<void> => {\n  const { channelId } = payload;\n\n  const channel = selectChat(global, channelId);\n  if (!channel) {\n    return;\n  }\n\n  const fullInfo = selectChatFullInfo(global, channelId);\n  let chat: ApiChat | undefined;\n  if (fullInfo?.linkedChatId) {\n    chat = selectChat(global, fullInfo.linkedChatId);\n  }\n\n  await callApi('setDiscussionGroup', { channel });\n  if (chat) {\n    global = getGlobal();\n    loadFullChat(global, actions, chat);\n  }\n});\n\naddActionHandler('setActiveChatFolder', (global, actions, payload): ActionReturnType => {\n  const { activeChatFolder, tabId = getCurrentTabId() } = payload;\n  const maxFolders = selectCurrentLimit(global, 'dialogFilters');\n\n  const isBlocked = activeChatFolder + 1 > maxFolders;\n\n  if (isBlocked) {\n    actions.openLimitReachedModal({\n      limit: 'dialogFilters',\n      tabId,\n    });\n    return undefined;\n  }\n\n  return updateTabState(global, {\n    activeChatFolder,\n  }, tabId);\n});\n\naddActionHandler('resetOpenChatWithDraft', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n\n  return updateTabState(global, {\n    requestedDraft: undefined,\n  }, tabId);\n});\n\naddActionHandler('loadMoreMembers', async (global, actions, payload): Promise<void> => {\n  if (selectIsCurrentUserFrozen(global)) return;\n  const { tabId = getCurrentTabId() } = payload || {};\n  const { chatId } = selectCurrentMessageList(global, tabId) || {};\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  if (!chat || isChatBasicGroup(chat)) {\n    return;\n  }\n\n  const offset = selectChatFullInfo(global, chat.id)?.members?.length;\n  if (offset !== undefined && chat.membersCount !== undefined && offset >= chat.membersCount) return;\n\n  const result = await callApi('fetchMembers', { chat, offset });\n  if (!result) {\n    return;\n  }\n\n  const { members, userStatusesById } = result;\n  if (!members || !members.length) {\n    return;\n  }\n\n  global = getGlobal();\n  global = addUserStatuses(global, userStatusesById);\n  global = addChatMembers(global, chat, members);\n  setGlobal(global);\n});\n\naddActionHandler('addChatMembers', async (global, actions, payload): Promise<void> => {\n  const { chatId, memberIds, tabId = getCurrentTabId() } = payload;\n  const chat = selectChat(global, chatId);\n  const users = memberIds.map((userId) => selectUser(global, userId)).filter(Boolean);\n\n  if (!chat || !users.length) {\n    return;\n  }\n\n  actions.setNewChatMembersDialogState({ newChatMembersProgress: NewChatMembersProgress.Loading, tabId });\n  const missingUsers = await callApi('addChatMembers', chat, users);\n  if (missingUsers) {\n    global = getGlobal();\n    global = updateMissingInvitedUsers(global, chatId, missingUsers, tabId);\n    setGlobal(global);\n  }\n  actions.setNewChatMembersDialogState({ newChatMembersProgress: NewChatMembersProgress.Closed, tabId });\n  global = getGlobal();\n  loadFullChat(global, actions, chat);\n});\n\naddActionHandler('deleteChatMember', async (global, actions, payload): Promise<void> => {\n  const { chatId, userId } = payload;\n  const chat = selectChat(global, chatId);\n  const user = selectUser(global, userId);\n\n  if (!chat || !user) {\n    return;\n  }\n\n  await callApi('deleteChatMember', chat, user);\n  global = getGlobal();\n  loadFullChat(global, actions, chat);\n});\n\naddActionHandler('toggleIsProtected', (global, actions, payload): ActionReturnType => {\n  const { chatId, isProtected } = payload;\n  const chat = selectChat(global, chatId);\n\n  if (!chat) {\n    return;\n  }\n\n  void callApi('toggleIsProtected', { chat, isProtected });\n});\n\naddActionHandler('setChatEnabledReactions', async (global, actions, payload): Promise<void> => {\n  const {\n    chatId, enabledReactions, reactionsLimit,\n  } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n\n  await callApi('setChatEnabledReactions', {\n    chat,\n    enabledReactions,\n    reactionsLimit,\n  });\n\n  global = getGlobal();\n  void loadFullChat(global, actions, chat);\n});\n\naddActionHandler('fetchChat', (global, actions, payload): ActionReturnType => {\n  const { chatId } = payload;\n  const chat = selectChat(global, chatId);\n\n  if (chat) {\n    return;\n  }\n\n  if (selectIsChatWithSelf(global, chatId)) {\n    void callApi('fetchChat', { type: 'self' });\n  } else {\n    const user = selectUser(global, chatId);\n    if (user) {\n      void callApi('fetchChat', { type: 'user', user });\n    }\n  }\n});\n\naddActionHandler('toggleJoinToSend', async (global, actions, payload): Promise<void> => {\n  const { chatId, isEnabled } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n  if (!isChatSuperGroup(chat) && !isChatChannel(chat)) return;\n\n  await callApi('toggleJoinToSend', chat, isEnabled);\n});\n\naddActionHandler('toggleJoinRequest', async (global, actions, payload): Promise<void> => {\n  const { chatId, isEnabled } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n  if (!isChatSuperGroup(chat) && !isChatChannel(chat)) return;\n\n  await callApi('toggleJoinRequest', chat, isEnabled);\n});\n\naddActionHandler('openForumPanel', (global, actions, payload): ActionReturnType => {\n  const { chatId, tabId = getCurrentTabId() } = payload;\n  actions.toggleStoryRibbon({ isShown: false, tabId });\n  actions.toggleStoryRibbon({ isShown: false, isArchived: true, tabId });\n  return updateTabState(global, {\n    forumPanelChatId: chatId,\n  }, tabId);\n});\n\naddActionHandler('closeForumPanel', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  return updateTabState(global, {\n    forumPanelChatId: undefined,\n  }, tabId);\n});\n\naddActionHandler('processAttachBotParameters', async (global, actions, payload): Promise<void> => {\n  const {\n    username, filter, startParam, tabId = getCurrentTabId(),\n  } = payload;\n  const bot = await getAttachBotOrNotify(global, actions, username, tabId);\n  if (!bot) return;\n\n  const isForChat = Boolean(filter);\n\n  if (!isForChat) {\n    actions.callAttachBot({\n      isFromSideMenu: true,\n      bot,\n      startParam,\n      tabId,\n    });\n    return;\n  }\n\n  global = getGlobal();\n  const { attachMenu: { bots } } = global;\n  if (!bots[bot.id]) {\n    global = updateTabState(global, {\n      requestedAttachBotInstall: {\n        bot,\n        onConfirm: {\n          action: 'requestAttachBotInChat',\n          payload: {\n            bot,\n            filter,\n            startParam,\n          },\n        },\n      },\n    }, tabId);\n    setGlobal(global);\n    return;\n  }\n  actions.requestAttachBotInChat({\n    bot,\n    filter,\n    startParam,\n    tabId,\n  });\n});\n\naddActionHandler('loadTopics', async (global, actions, payload): Promise<void> => {\n  if (selectIsCurrentUserFrozen(global)) return;\n  const { chatId, force } = payload;\n  if (selectIsCurrentUserFrozen(global)) {\n    return;\n  }\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n\n  const topicsInfo = selectTopicsInfo(global, chatId);\n\n  if (!force && topicsInfo?.listedTopicIds && topicsInfo.listedTopicIds.length === topicsInfo.totalCount) {\n    return;\n  }\n\n  const offsetTopic = !force ? topicsInfo?.listedTopicIds?.reduce((acc, el) => {\n    const topic = selectTopic(global, chatId, el);\n    const accTopic = selectTopic(global, chatId, acc);\n    if (!topic) return acc;\n    if (!accTopic || topic.lastMessageId < accTopic.lastMessageId) {\n      return el;\n    }\n    return acc;\n  }) : undefined;\n\n  const { id: offsetTopicId, date: offsetDate, lastMessageId: offsetId } = (offsetTopic\n    && selectTopic(global, chatId, offsetTopic)) || {};\n  const result = await callApi('fetchTopics', {\n    chat, offsetTopicId, offsetId, offsetDate, limit: offsetTopicId ? TOPICS_SLICE : TOPICS_SLICE_SECOND_LOAD,\n  });\n\n  if (!result) return;\n\n  global = getGlobal();\n  global = addMessages(global, result.messages);\n  global = updateTopics(global, chatId, result.count, result.topics);\n  global = updateListedTopicIds(global, chatId, result.topics.map((topic) => topic.id));\n  Object.entries(result.draftsById || {}).forEach(([threadId, draft]) => {\n    global = replaceThreadParam(global, chatId, Number(threadId), 'draft', draft);\n  });\n  Object.entries(result.readInboxMessageIdByTopicId || {}).forEach(([topicId, messageId]) => {\n    global = updateThreadInfo(global, chatId, Number(topicId), { lastReadInboxMessageId: messageId });\n  });\n\n  setGlobal(global);\n});\n\naddActionHandler('loadTopicById', async (global, actions, payload): Promise<void> => {\n  const { chatId, topicId } = payload;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n\n  const result = await callApi('fetchTopicById', { chat, topicId });\n\n  if (!result) {\n    if ('tabId' in payload && payload.shouldCloseChatOnError) {\n      const { tabId = getCurrentTabId() } = payload;\n      actions.openChat({ id: undefined, tabId });\n    }\n    return;\n  }\n\n  global = getGlobal();\n  global = addMessages(global, result.messages);\n  global = updateTopic(global, chatId, topicId, result.topic);\n\n  setGlobal(global);\n});\n\naddActionHandler('toggleForum', async (global, actions, payload): Promise<void> => {\n  const { chatId, isEnabled, tabId = getCurrentTabId() } = payload;\n\n  const chat = await ensureIsSuperGroup(global, actions, chatId, tabId);\n  if (!chat) {\n    return;\n  }\n\n  let result: true | undefined;\n  try {\n    result = await callApi('toggleForum', { chat, isEnabled });\n  } catch (error) {\n    if ((error as ApiError).message === 'FLOOD') {\n      actions.showNotification({ message: langProvider.oldTranslate('FloodWait'), tabId });\n    } else {\n      actions.showDialog({ data: { ...(error as ApiError), hasErrorKey: true }, tabId });\n    }\n  }\n\n  if (result) {\n    global = getGlobal();\n    global = updateChat(global, chat.id, { isForum: isEnabled });\n    setGlobal(global);\n\n    if (!isEnabled) {\n      actions.closeForumPanel({ tabId });\n    } else {\n      actions.openForumPanel({ chatId: chat.id, tabId });\n    }\n  }\n});\n\naddActionHandler('toggleParticipantsHidden', async (global, actions, payload): Promise<void> => {\n  const { chatId, isEnabled } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  const prevIsEnabled = selectChatFullInfo(global, chat.id)?.areParticipantsHidden;\n  global = updateChatFullInfo(global, chatId, { areParticipantsHidden: isEnabled });\n  setGlobal(global);\n\n  const result = await callApi('toggleParticipantsHidden', { chat, isEnabled });\n\n  if (!result && prevIsEnabled !== undefined) {\n    global = getGlobal();\n    global = updateChatFullInfo(global, chatId, { areParticipantsHidden: prevIsEnabled });\n    setGlobal(global);\n  }\n});\n\naddActionHandler('createTopic', async (global, actions, payload): Promise<void> => {\n  const {\n    chatId, title, iconColor, iconEmojiId,\n    tabId = getCurrentTabId(),\n  } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n\n  if (selectTabState(global, tabId).createTopicPanel) {\n    global = updateTabState(global, {\n      createTopicPanel: {\n        chatId,\n        isLoading: true,\n      },\n    }, tabId);\n    setGlobal(global);\n  }\n\n  const topicId = await callApi('createTopic', {\n    chat, title, iconColor, iconEmojiId,\n  });\n  if (topicId) {\n    actions.openThread({\n      chatId, threadId: topicId, shouldReplaceHistory: true, tabId,\n    });\n  }\n  actions.closeCreateTopicPanel({ tabId });\n});\n\naddActionHandler('deleteTopic', async (global, actions, payload): Promise<void> => {\n  const { chatId, topicId } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n\n  await callApi('deleteTopic', { chat, topicId });\n\n  global = getGlobal();\n  global = deleteTopic(global, chatId, topicId);\n  setGlobal(global);\n});\n\naddActionHandler('editTopic', async (global, actions, payload): Promise<void> => {\n  const {\n    chatId, topicId, tabId = getCurrentTabId(), ...rest\n  } = payload;\n  const chat = selectChat(global, chatId);\n  const topic = selectTopic(global, chatId, topicId);\n  if (!chat || !topic) return;\n\n  if (selectTabState(global, tabId).editTopicPanel) {\n    global = updateTabState(global, {\n      editTopicPanel: {\n        chatId,\n        topicId,\n        isLoading: true,\n      },\n    }, tabId);\n    setGlobal(global);\n  }\n\n  const result = await callApi('editTopic', { chat, topicId, ...rest });\n  if (!result) return;\n\n  global = getGlobal();\n  global = updateTopic(global, chatId, topicId, rest);\n  setGlobal(global);\n\n  actions.closeEditTopicPanel({ tabId });\n});\n\naddActionHandler('toggleTopicPinned', (global, actions, payload): ActionReturnType => {\n  const {\n    chatId, topicId, isPinned, tabId = getCurrentTabId(),\n  } = payload;\n\n  const { topicsPinnedLimit } = global.appConfig || {};\n  const chat = selectChat(global, chatId);\n  const topics = selectTopics(global, chatId);\n  if (!chat || !topics || !topicsPinnedLimit) return;\n\n  if (isPinned && Object.values(topics).filter((topic) => topic.isPinned).length >= topicsPinnedLimit) {\n    actions.showNotification({\n      message: langProvider.oldTranslate('LimitReachedPinnedTopics', topicsPinnedLimit, 'i'),\n      tabId,\n    });\n    return;\n  }\n\n  void callApi('togglePinnedTopic', { chat, topicId, isPinned });\n});\n\naddActionHandler('checkChatlistInvite', async (global, actions, payload): Promise<void> => {\n  const { slug, tabId = getCurrentTabId() } = payload;\n\n  const result = await callApi('checkChatlistInvite', { slug });\n  if (!result) {\n    actions.showNotification({\n      message: langProvider.oldTranslate('lng_group_invite_bad_link'),\n      tabId,\n    });\n    return;\n  }\n\n  global = getGlobal();\n\n  global = updateTabState(global, {\n    chatlistModal: {\n      invite: result.invite,\n    },\n  }, tabId);\n\n  setGlobal(global);\n});\n\naddActionHandler('joinChatlistInvite', async (global, actions, payload): Promise<void> => {\n  const { invite, peerIds, tabId = getCurrentTabId() } = payload;\n\n  const peers = peerIds.map((peerId) => selectChat(global, peerId)).filter(Boolean);\n  const currentNotJoinedCount = peers.filter((peer) => peer.isNotJoined).length;\n\n  const existingFolder = 'folderId' in invite ? selectChatFolder(global, invite.folderId) : undefined;\n  const folderTitle = ('title' in invite ? invite.title : existingFolder?.title)!;\n\n  try {\n    const result = await callApi('joinChatlistInvite', { slug: invite.slug, peers });\n    if (!result) return;\n\n    if (existingFolder) {\n      actions.showNotification({\n        title: {\n          key: 'FolderLinkNotificationUpdatedTitle',\n          variables: {\n            title: folderTitle.text,\n          },\n        },\n        message: {\n          key: 'FolderLinkNotificationUpdatedSubtitle',\n          variables: {\n            count: currentNotJoinedCount,\n          },\n          options: {\n            pluralValue: currentNotJoinedCount,\n          },\n        },\n        tabId,\n      });\n\n      return;\n    }\n\n    actions.showNotification({\n      title: {\n        key: 'FolderLinkNotificationAddedTitle',\n        variables: {\n          title: folderTitle.text,\n        },\n      },\n      message: {\n        key: 'FolderLinkNotificationAddedSubtitle',\n        variables: {\n          count: currentNotJoinedCount,\n        },\n        options: {\n          pluralValue: currentNotJoinedCount,\n        },\n      },\n      tabId,\n    });\n  } catch (error) {\n    if ((error as ApiError).message === 'CHATLISTS_TOO_MUCH') {\n      actions.openLimitReachedModal({ limit: 'chatlistJoined', tabId });\n    } else {\n      actions.showDialog({ data: { ...(error as ApiError), hasErrorKey: true }, tabId });\n    }\n  }\n});\n\naddActionHandler('leaveChatlist', async (global, actions, payload): Promise<void> => {\n  const { folderId, peerIds, tabId = getCurrentTabId() } = payload;\n\n  const folder = selectChatFolder(global, folderId);\n\n  const peers = peerIds?.map((peerId) => selectChat(global, peerId)).filter(Boolean) || [];\n\n  const result = await callApi('leaveChatlist', { folderId, peers });\n\n  if (!result) return;\n  if (!folder) return;\n\n  actions.showNotification({\n    title: {\n      key: 'FolderLinkNotificationDeletedTitle',\n      variables: {\n        title: folder.title.text,\n      },\n    },\n    message: {\n      key: 'FolderLinkNotificationDeletedSubtitle',\n      variables: {\n        count: peers.length,\n      },\n      options: {\n        pluralValue: peers.length,\n      },\n    },\n    tabId,\n  });\n});\n\naddActionHandler('loadChatlistInvites', async (global, actions, payload): Promise<void> => {\n  const { folderId } = payload;\n\n  const result = await callApi('fetchChatlistInvites', { folderId });\n\n  if (!result) return;\n\n  global = getGlobal();\n\n  global = {\n    ...global,\n    chatFolders: {\n      ...global.chatFolders,\n      invites: {\n        ...global.chatFolders.invites,\n        [folderId]: result.invites,\n      },\n    },\n  };\n  setGlobal(global);\n});\n\naddActionHandler('createChatlistInvite', async (global, actions, payload): Promise<void> => {\n  const { folderId, tabId = getCurrentTabId() } = payload;\n\n  const folder = selectChatFolder(global, folderId);\n  if (!folder) return;\n\n  global = updateTabState(global, {\n    shareFolderScreen: {\n      ...selectTabState(global, tabId).shareFolderScreen!,\n      isLoading: true,\n    },\n  }, tabId);\n  setGlobal(global);\n\n  let result: { filter: ApiChatFolder; invite: ApiChatlistExportedInvite | undefined } | undefined;\n\n  try {\n    result = await callApi('createChalistInvite', {\n      folderId,\n      peers: folder.includedChatIds.concat(folder.pinnedChatIds || [])\n        .map((chatId) => selectChat(global, chatId) || selectUser(global, chatId)).filter(Boolean),\n    });\n  } catch (error) {\n    if (CHATLIST_LIMIT_ERROR_LIST.has((error as ApiError).message)) {\n      actions.openLimitReachedModal({ limit: 'chatlistInvites', tabId });\n      actions.openSettingsScreen({ screen: SettingsScreens.Folders, tabId });\n    } else {\n      actions.showDialog({ data: { ...(error as ApiError), hasErrorKey: true }, tabId });\n    }\n  }\n\n  if (!result || !result.invite) return;\n\n  const { shareFolderScreen } = selectTabState(global, tabId);\n\n  if (!shareFolderScreen) return;\n\n  global = getGlobal();\n  global = {\n    ...global,\n    chatFolders: {\n      ...global.chatFolders,\n      byId: {\n        ...global.chatFolders.byId,\n        [folderId]: {\n          ...global.chatFolders.byId[folderId],\n          ...result.filter,\n        },\n      },\n      invites: {\n        ...global.chatFolders.invites,\n        [folderId]: [\n          ...(global.chatFolders.invites[folderId] || []),\n          result.invite,\n        ],\n      },\n    },\n  };\n  global = updateTabState(global, {\n    shareFolderScreen: {\n      ...shareFolderScreen,\n      url: result.invite.url,\n      isLoading: false,\n    },\n  }, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('editChatlistInvite', async (global, actions, payload): Promise<void> => {\n  const {\n    folderId, peerIds, url, tabId = getCurrentTabId(),\n  } = payload;\n\n  const slug = url.split('/').pop();\n  if (!slug) return;\n\n  const peers = peerIds\n    .map((chatId) => selectChat(global, chatId) || selectUser(global, chatId)).filter(Boolean);\n\n  global = updateTabState(global, {\n    shareFolderScreen: {\n      ...selectTabState(global, tabId).shareFolderScreen!,\n      isLoading: true,\n    },\n  }, tabId);\n  setGlobal(global);\n\n  try {\n    const result = await callApi('editChatlistInvite', { folderId, slug, peers });\n\n    if (!result) {\n      return;\n    }\n\n    global = getGlobal();\n    global = {\n      ...global,\n      chatFolders: {\n        ...global.chatFolders,\n        invites: {\n          ...global.chatFolders.invites,\n          [folderId]: global.chatFolders.invites[folderId]?.map((invite) => {\n            if (invite.url === url) {\n              return result;\n            }\n            return invite;\n          }),\n        },\n      },\n    };\n    setGlobal(global);\n  } catch (error) {\n    actions.showDialog({ data: { ...(error as ApiError), hasErrorKey: true }, tabId });\n  } finally {\n    global = getGlobal();\n\n    global = updateTabState(global, {\n      shareFolderScreen: {\n        ...selectTabState(global, tabId).shareFolderScreen!,\n        isLoading: false,\n      },\n    }, tabId);\n    setGlobal(global);\n  }\n});\n\naddActionHandler('deleteChatlistInvite', async (global, actions, payload): Promise<void> => {\n  const { folderId, url } = payload;\n\n  const slug = url.split('/').pop();\n\n  if (!slug) return;\n\n  const result = await callApi('deleteChatlistInvite', { folderId, slug });\n\n  if (!result) return;\n\n  global = getGlobal();\n  global = {\n    ...global,\n    chatFolders: {\n      ...global.chatFolders,\n      invites: {\n        ...global.chatFolders.invites,\n        [folderId]: global.chatFolders.invites[folderId]?.filter((invite) => invite.url !== url),\n      },\n    },\n  };\n  setGlobal(global);\n});\n\naddActionHandler('openDeleteChatFolderModal', async (global, actions, payload): Promise<void> => {\n  const { folderId, isConfirmedForChatlist, tabId = getCurrentTabId() } = payload;\n  const folder = selectChatFolder(global, folderId);\n  if (!folder) return;\n\n  if (folder.isChatList && (!folder.hasMyInvites || isConfirmedForChatlist)) {\n    const currentIds = getOrderedIds(folderId);\n    const suggestions = await callApi('fetchLeaveChatlistSuggestions', { folderId });\n    global = getGlobal();\n    global = updateTabState(global, {\n      chatlistModal: {\n        removal: {\n          folderId,\n          suggestedPeerIds: unique([...(suggestions || []), ...(currentIds || [])]),\n        },\n      },\n    }, tabId);\n    setGlobal(global);\n    return;\n  }\n\n  global = updateTabState(global, {\n    deleteFolderDialogModal: folderId,\n  }, tabId);\n\n  setGlobal(global);\n});\n\naddActionHandler('updateChatDetectedLanguage', (global, actions, payload): ActionReturnType => {\n  const { chatId, detectedLanguage } = payload;\n\n  global = getGlobal();\n  global = updateChat(global, chatId, {\n    detectedLanguage,\n  }, undefined, true);\n\n  return global;\n});\n\naddActionHandler('togglePeerTranslations', async (global, actions, payload): Promise<void> => {\n  const { chatId, isEnabled } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n\n  const result = await callApi('togglePeerTranslations', { chat, isEnabled });\n\n  if (result === undefined) return;\n\n  global = getGlobal();\n  global = updatePeerFullInfo(global, chatId, {\n    isTranslationDisabled: isEnabled ? undefined : true,\n  });\n  setGlobal(global);\n});\n\naddActionHandler('setViewForumAsMessages', (global, actions, payload): ActionReturnType => {\n  const { chatId, isEnabled } = payload;\n\n  const chat = selectChat(global, chatId);\n  if (!chat?.isForum || chat.isForumAsMessages === isEnabled) {\n    return;\n  }\n\n  global = updateChat(global, chatId, { isForumAsMessages: isEnabled || undefined });\n  setGlobal(global);\n\n  void callApi('setViewForumAsMessages', { chat, isEnabled });\n});\n\naddActionHandler('loadChannelRecommendations', async (global, actions, payload): Promise<void> => {\n  if (selectIsCurrentUserFrozen(global)) return;\n\n  const { chatId } = payload;\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n\n  if (chatId && !chat) {\n    return;\n  }\n\n  if (!chatId) {\n    const similarChannelIds = selectSimilarChannelIds(global, GLOBAL_SUGGESTED_CHANNELS_ID);\n    if (similarChannelIds) return; // Already cached\n  }\n\n  const result = await callApi('fetchChannelRecommendations', {\n    chat,\n  });\n\n  if (!result) {\n    return;\n  }\n\n  const { similarChannels, count } = result;\n\n  const chatsById = buildCollectionByKey(similarChannels, 'id');\n\n  global = getGlobal();\n  global = replaceSimilarChannels(global, chatId || GLOBAL_SUGGESTED_CHANNELS_ID, Object.keys(chatsById), count);\n  setGlobal(global);\n});\n\naddActionHandler('loadBotRecommendations', async (global, actions, payload): Promise<void> => {\n  if (selectIsCurrentUserFrozen(global)) return;\n\n  const { userId } = payload;\n  const user = selectChat(global, userId);\n\n  if (!user) {\n    return;\n  }\n\n  const result = await callApi('fetchBotsRecommendations', {\n    user,\n  });\n\n  if (!result) {\n    return;\n  }\n\n  const { similarBots, count } = result;\n\n  const users = buildCollectionByKey(similarBots, 'id');\n\n  global = getGlobal();\n  global = addUsers(global, users);\n  global = addSimilarBots(global, userId, Object.keys(users), count);\n  setGlobal(global);\n});\n\naddActionHandler('toggleChannelRecommendations', (global, actions, payload): ActionReturnType => {\n  const { chatId } = payload;\n  const chat = selectChat(global, chatId);\n\n  if (!chat) {\n    return;\n  }\n\n  global = toggleSimilarChannels(global, chatId);\n  setGlobal(global);\n});\n\naddActionHandler('updatePaidMessagesPrice', async (global, actions, payload): Promise<void> => {\n  const { chatId, paidMessagesStars, tabId = getCurrentTabId() } = payload;\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  if (!chat) return;\n\n  global = updateManagementProgress(global, ManagementProgress.InProgress, tabId);\n  setGlobal(global);\n\n  const result = await callApi('updatePaidMessagesPrice', {\n    chat,\n    paidMessagesStars,\n  });\n\n  if (!result) return;\n\n  global = getGlobal();\n  global = updateManagementProgress(global, ManagementProgress.Complete, tabId);\n  global = updateChat(global, chatId, { paidMessagesStars });\n  setGlobal(global);\n});\n\naddActionHandler('resolveBusinessChatLink', async (global, actions, payload): Promise<void> => {\n  const { slug, tabId = getCurrentTabId() } = payload;\n  const result = await callApi('resolveBusinessChatLink', { slug });\n  if (!result) {\n    actions.showNotification({\n      message: langProvider.oldTranslate('BusinessLink.ErrorExpired'),\n      tabId,\n    });\n    return;\n  }\n\n  const { chatLink } = result;\n\n  actions.openChatWithDraft({\n    chatId: chatLink.chatId,\n    text: chatLink.text,\n    tabId,\n  });\n});\n\naddActionHandler('requestCollectibleInfo', async (global, actions, payload): Promise<void> => {\n  const {\n    type, collectible, peerId, tabId = getCurrentTabId(),\n  } = payload;\n\n  let inputCollectible;\n  if (type === 'phone') {\n    inputCollectible = { phone: collectible };\n  }\n  if (type === 'username') {\n    inputCollectible = { username: collectible };\n  }\n  if (!inputCollectible) return;\n\n  const result = await callApi('fetchCollectionInfo', inputCollectible);\n  if (!result) {\n    copyTextToClipboard(collectible);\n    return;\n  }\n\n  global = getGlobal();\n  global = updateTabState(global, {\n    collectibleInfoModal: {\n      ...result,\n      type,\n      collectible,\n      peerId,\n    },\n  }, tabId);\n  setGlobal(global);\n});\n\nasync function loadChats(\n  listType: ChatListType,\n  isFullDraftSync?: boolean,\n  shouldIgnorePagination?: boolean,\n) {\n  let global = getGlobal();\n  let lastLocalServiceMessageId = selectLastServiceNotification(global)?.id;\n\n  const params = !shouldIgnorePagination ? selectChatListLoadingParameters(global, listType) : {};\n  const offsetPeer = params.nextOffsetPeerId ? selectPeer(global, params.nextOffsetPeerId) : undefined;\n  const offsetDate = params.nextOffsetDate;\n  const offsetId = params.nextOffsetId;\n\n  const isFirstBatch = !shouldIgnorePagination && !offsetPeer && !offsetDate && !offsetId;\n  const shouldReplaceStaleState = listType === 'active' && isFirstBatch;\n  const isAccountFreeze = selectIsCurrentUserFrozen(global);\n\n  const result = listType === 'saved' ? await callApi('fetchSavedChats', {\n    limit: CHAT_LIST_LOAD_SLICE,\n    offsetDate,\n    offsetId,\n    offsetPeer,\n    withPinned: isFirstBatch && !isAccountFreeze,\n  }) : await callApi('fetchChats', {\n    limit: CHAT_LIST_LOAD_SLICE,\n    offsetDate,\n    offsetId,\n    offsetPeer,\n    archived: listType === 'archived',\n    withPinned: isFirstBatch && !isAccountFreeze,\n    lastLocalServiceMessageId,\n  });\n\n  if (!result) {\n    return;\n  }\n\n  const { chatIds } = result;\n\n  global = getGlobal();\n  lastLocalServiceMessageId = selectLastServiceNotification(global)?.id;\n\n  const newChats = buildCollectionByKey(result.chats, 'id');\n\n  global = updateUsers(global, buildCollectionByKey(result.users, 'id'));\n  global = updateChats(global, newChats);\n  if (isFirstBatch) {\n    global = replaceChatListIds(global, listType, chatIds);\n  } else {\n    global = addChatListIds(global, listType, chatIds);\n  }\n\n  if (shouldReplaceStaleState) {\n    global = replaceUserStatuses(global, result.userStatusesById);\n    global = replaceNotifyExceptions(global, result.notifyExceptionById);\n  } else {\n    global = addUserStatuses(global, result.userStatusesById);\n    global = addNotifyExceptions(global, result.notifyExceptionById);\n  }\n\n  global = updateChatListSecondaryInfo(global, listType, result);\n  global = replaceMessages(global, result.messages);\n  global = updateChatsLastMessageId(global, result.lastMessageByChatId, listType);\n\n  if (!shouldIgnorePagination) {\n    global = replaceChatListLoadingParameters(\n      global, listType, result.nextOffsetId, result.nextOffsetPeerId, result.nextOffsetDate,\n    );\n  }\n\n  const idsToUpdateDraft = isFullDraftSync ? result.chatIds : Object.keys(result.draftsById);\n  idsToUpdateDraft.forEach((chatId) => {\n    const draft = result.draftsById[chatId];\n    const thread = selectThread(global, chatId, MAIN_THREAD_ID);\n\n    if (!draft && !thread) return;\n\n    if (!selectDraft(global, chatId, MAIN_THREAD_ID)?.isLocal) {\n      global = replaceThreadParam(\n        global, chatId, MAIN_THREAD_ID, 'draft', draft,\n      );\n    }\n  });\n\n  if ((chatIds.length === 0 || chatIds.length === result.totalChatCount) && !global.chats.isFullyLoaded[listType]) {\n    global = {\n      ...global,\n      chats: {\n        ...global.chats,\n        isFullyLoaded: {\n          ...global.chats.isFullyLoaded,\n          [listType]: true,\n        },\n      },\n    };\n  }\n\n  setGlobal(global);\n}\n\nexport async function loadFullChat<T extends GlobalState>(\n  global: T, actions: RequiredGlobalActions, chat: ApiChat,\n) {\n  if (selectIsCurrentUserFrozen(global)) return undefined;\n  const result = await callApi('fetchFullChat', chat);\n  if (!result) {\n    return undefined;\n  }\n\n  const {\n    chats, userStatusesById, fullInfo, groupCall, membersCount, isForumAsMessages,\n  } = result;\n\n  global = getGlobal();\n  global = updateChats(global, buildCollectionByKey(chats, 'id'));\n\n  if (userStatusesById) {\n    global = addUserStatuses(global, userStatusesById);\n  }\n\n  if (groupCall) {\n    const existingGroupCall = selectGroupCall(global, groupCall.id!);\n    global = updateGroupCall(\n      global,\n      groupCall.id!,\n      omit(groupCall, ['connectionState', 'isLoaded']),\n      undefined,\n      existingGroupCall ? undefined : groupCall.participantsCount,\n    );\n  }\n\n  if (membersCount !== undefined) {\n    global = updateChat(global, chat.id, { membersCount });\n  }\n  if (chat.isForum) {\n    global = updateChat(global, chat.id, { isForumAsMessages });\n  }\n  global = replaceChatFullInfo(global, chat.id, fullInfo);\n  setGlobal(global);\n\n  const stickerSet = fullInfo.stickerSet;\n  const localSet = stickerSet && selectStickerSet(global, stickerSet);\n  if (stickerSet && !localSet) {\n    actions.loadStickers({\n      stickerSetInfo: {\n        id: stickerSet.id,\n        accessHash: stickerSet.accessHash,\n      },\n    });\n  }\n\n  const emojiSet = fullInfo.emojiSet;\n  const localEmojiSet = emojiSet && selectStickerSet(global, emojiSet);\n  if (emojiSet && !localEmojiSet) {\n    actions.loadStickers({\n      stickerSetInfo: {\n        id: emojiSet.id,\n        accessHash: emojiSet.accessHash,\n      },\n    });\n  }\n\n  return result;\n}\n\nexport async function migrateChat<T extends GlobalState>(\n  global: T, actions: RequiredGlobalActions, chat: ApiChat,\n  ...[tabId = getCurrentTabId()]: TabArgs<T>\n): Promise<ApiChat | undefined> {\n  try {\n    const supergroup = await callApi('migrateChat', chat);\n\n    return supergroup;\n  } catch (error) {\n    if ((error as ApiError).message === 'CHANNELS_TOO_MUCH') {\n      actions.openLimitReachedModal({ limit: 'channels', tabId });\n    } else {\n      actions.showDialog({ data: { ...(error as ApiError), hasErrorKey: true }, tabId });\n    }\n\n    return undefined;\n  }\n}\n\nexport async function fetchChatByUsername<T extends GlobalState>(\n  global: T,\n  username: string,\n  referrer?: string,\n) {\n  global = getGlobal();\n  const localChat = !referrer ? selectChatByUsername(global, username) : undefined;\n  if (localChat && !localChat.isMin) {\n    return localChat;\n  }\n\n  const { chat, user } = await callApi('getChatByUsername', username, referrer) || {};\n  if (!chat) {\n    return undefined;\n  }\n\n  global = getGlobal();\n  global = updateChat(global, chat.id, chat);\n  if (user) {\n    global = updateUser(global, user.id, user);\n  }\n\n  setGlobal(global);\n\n  return chat;\n}\n\nexport async function checkWebAppExists<T extends GlobalState>(\n  global: T, botName: string, appName: string,\n) {\n  if (!botName || !appName) return false;\n  global = getGlobal();\n  const chatByUsername = await fetchChatByUsername(global, botName);\n  global = getGlobal();\n  const bot = chatByUsername && selectUser(global, chatByUsername.id);\n  const botApp = bot && await callApi('fetchBotApp', {\n    bot,\n    appName,\n  });\n  return Boolean(botApp);\n}\n\nexport async function fetchChatByPhoneNumber<T extends GlobalState>(global: T, phoneNumber: string) {\n  global = getGlobal();\n  const localUser = selectUserByPhoneNumber(global, phoneNumber);\n  if (localUser && !localUser.isMin) {\n    return selectChat(global, localUser.id);\n  }\n\n  const { chat, user } = await callApi('getChatByPhoneNumber', phoneNumber) || {};\n  if (!chat) {\n    return undefined;\n  }\n\n  global = getGlobal();\n  global = updateChat(global, chat.id, chat);\n\n  if (user) {\n    global = updateUser(global, user.id, user);\n  }\n  setGlobal(global);\n\n  return chat;\n}\n\nasync function getAttachBotOrNotify<T extends GlobalState>(\n  global: T, actions: RequiredGlobalActions, username: string,\n  ...[tabId = getCurrentTabId()]: TabArgs<T>\n) {\n  const chat = await fetchChatByUsername(global, username);\n  if (!chat) return undefined;\n\n  global = getGlobal();\n  const user = selectUser(global, chat.id);\n  if (!user) return undefined;\n\n  const isBot = isUserBot(user);\n  if (!isBot) return undefined;\n  const result = await callApi('loadAttachBot', {\n    bot: user,\n  });\n\n  global = getGlobal();\n  if (!result) {\n    actions.showNotification({\n      message: langProvider.oldTranslate('WebApp.AddToAttachmentUnavailableError'),\n      tabId,\n    });\n\n    return undefined;\n  }\n  setGlobal(global);\n\n  return result.bot;\n}\n\nasync function openChatByUsername<T extends GlobalState>(\n  global: T,\n  actions: RequiredGlobalActions,\n  params: {\n    username: string;\n    threadId?: ThreadId;\n    channelPostId?: number;\n    startParam?: string;\n    ref?: string;\n    startAttach?: string;\n    attach?: string;\n    text?: string;\n    timestamp?: number;\n  },\n  ...[tabId = getCurrentTabId()]: TabArgs<T>\n) {\n  const {\n    username, threadId, channelPostId, startParam, ref, startAttach, attach, text, timestamp,\n  } = params;\n  const currentChat = selectCurrentChat(global, tabId);\n\n  // Attach in the current chat\n  if (startAttach !== undefined && !attach) {\n    const bot = await getAttachBotOrNotify(global, actions, username, tabId);\n\n    if (!bot) return;\n\n    actions.callAttachBot({\n      bot,\n      chatId: currentChat?.id || bot.id,\n      startParam: startAttach,\n      tabId,\n    });\n\n    return;\n  }\n\n  const isCurrentChat = currentChat?.usernames?.some((c) => c.username === username);\n\n  if (!isCurrentChat) {\n    // Open temporary empty chat to make the click response feel faster\n    actions.openChat({ id: TMP_CHAT_ID, tabId });\n  }\n\n  const starRefStartPrefixes = global.appConfig?.starRefStartPrefixes;\n  let referrer = ref;\n  if (startParam && starRefStartPrefixes?.length) {\n    const prefix = starRefStartPrefixes.find((p) => startParam.startsWith(p));\n    if (prefix) {\n      referrer = startParam.slice(prefix.length);\n    }\n  }\n\n  const chat = await fetchChatByUsername(global, username, referrer);\n  if (!chat) {\n    if (!isCurrentChat) {\n      actions.openPreviousChat({ tabId });\n      actions.showNotification({ message: 'User does not exist', tabId });\n    }\n\n    return;\n  }\n\n  openChatWithParams(global, actions, chat, {\n    isCurrentChat,\n    threadId,\n    messageId: channelPostId,\n    startParam,\n    referrer,\n    startAttach,\n    attach,\n    text,\n    timestamp,\n  }, tabId);\n}\n\nasync function openChatWithParams<T extends GlobalState>(\n  global: T,\n  actions: RequiredGlobalActions,\n  chat: ApiChat,\n  params: {\n    isCurrentChat?: boolean;\n    threadId?: ThreadId;\n    messageId?: number;\n    startParam?: string;\n    referrer?: string;\n    startAttach?: string;\n    attach?: string;\n    text?: string;\n    timestamp?: number;\n  },\n  ...[tabId = getCurrentTabId()]: TabArgs<T>\n) {\n  const {\n    isCurrentChat, threadId, messageId, startParam, referrer, startAttach, attach, text, timestamp,\n  } = params;\n\n  if (messageId) {\n    let isTopicProcessed = false;\n    // In forums, link to a topic start message should open the topic\n    if (chat.isForum && !threadId) {\n      let topic = selectTopics(global, chat.id)?.[messageId];\n      if (!topic) {\n        const topicResult = await callApi('fetchTopicById', { chat, topicId: messageId });\n        topic = topicResult?.topic;\n      }\n\n      if (topic) {\n        actions.openThread({\n          chatId: chat.id, threadId: topic.id, tabId,\n        });\n        isTopicProcessed = true;\n      }\n    }\n\n    if (!isTopicProcessed) {\n      actions.focusMessage({\n        chatId: chat.id, threadId, messageId, timestamp, tabId,\n      });\n    }\n  } else if (!isCurrentChat) {\n    actions.openThread({ chatId: chat.id, threadId: threadId ?? MAIN_THREAD_ID, tabId });\n  }\n\n  if (startParam && !referrer) {\n    actions.startBot({ botId: chat.id, param: startParam });\n  }\n\n  if (attach) {\n    global = getGlobal();\n    openAttachMenuFromLink(global, actions, chat.id, attach, startAttach, tabId);\n  }\n\n  if (text) {\n    actions.openChatWithDraft({ chatId: chat.id, text: { text }, tabId });\n  }\n\n  if (messageId && timestamp) {\n    actions.openMediaFromTimestamp({\n      chatId: chat.id, threadId, messageId, timestamp, tabId,\n    });\n  }\n}\n\nasync function openAttachMenuFromLink<T extends GlobalState>(\n  global: T,\n  actions: RequiredGlobalActions,\n  chatId: string,\n  attach: string,\n  startAttach?: string | boolean,\n  ...[tabId = getCurrentTabId()]: TabArgs<T>\n) {\n  global = getGlobal();\n  const bot = await getAttachBotOrNotify(global, actions, attach, tabId);\n  if (!bot) return;\n\n  actions.callAttachBot({\n    bot,\n    chatId,\n    ...(typeof startAttach === 'string' && { startParam: startAttach }),\n    tabId,\n  });\n}\n\nexport async function ensureIsSuperGroup<T extends GlobalState>(\n  global: T,\n  actions: RequiredGlobalActions,\n  chatId: string,\n  ...[tabId = getCurrentTabId()]: TabArgs<T>\n) {\n  const chat = selectChat(global, chatId);\n  if (!chat || !isChatBasicGroup(chat)) {\n    return chat;\n  }\n\n  const newChat = await migrateChat(global, actions, chat, tabId);\n  if (!newChat) {\n    return undefined;\n  }\n\n  actions.loadFullChat({ chatId: newChat.id });\n  actions.openChat({ id: newChat.id, tabId });\n\n  return newChat;\n}\n","import type { ApiGroupCall } from '../../../api/types';\nimport type { CallSound } from '../../../types';\nimport type { RequiredGlobalActions } from '../../index';\nimport type {\n  ActionReturnType, GlobalState, TabArgs,\n} from '../../types';\n\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { ARE_CALLS_SUPPORTED } from '../../../util/browser/windowEnvironment';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { getCurrentTabId } from '../../../util/establishMultitabRole';\nimport { omit } from '../../../util/iteratees';\nimport * as langProvider from '../../../util/oldLangProvider';\nimport safePlay from '../../../util/safePlay';\nimport { callApi } from '../../../api/gramjs';\nimport { getMainUsername } from '../../helpers';\nimport {\n  addActionHandler, getGlobal,\n  setGlobal,\n} from '../../index';\nimport { updateGroupCall } from '../../reducers/calls';\nimport { updateTabState } from '../../reducers/tabs';\nimport {\n  selectChat, selectChatFullInfo, selectIsCurrentUserFrozen,\n  selectTabState, selectUser,\n} from '../../selectors';\nimport { selectActiveGroupCall, selectChatGroupCall, selectGroupCall } from '../../selectors/calls';\nimport { fetchChatByUsername, loadFullChat } from '../api/chats';\n\n// This is a tiny MP3 file that is silent - retrieved from https://bigsoundbank.com and then modified\n// eslint-disable-next-line @stylistic/max-len\nconst silentSound = 'data:audio/mpeg;base64,SUQzBAAAAAABEVRYWFgAAAAtAAADY29tbWVudABCaWdTb3VuZEJhbmsuY29tIC8gTGFTb25vdGhlcXVlLm9yZwBURU5DAAAAHQAAA1N3aXRjaCBQbHVzIMKpIE5DSCBTb2Z0d2FyZQBUSVQyAAAABgAAAzIyMzUAVFNTRQAAAA8AAANMYXZmNTcuODMuMTAwAAAAAAAAAAAAAAD/80DEAAAAA0gAAAAATEFNRTMuMTAwVVVVVVVVVVVVVUxBTUUzLjEwMFVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVf/zQsRbAAADSAAAAABVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVf/zQMSkAAADSAAAAABVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV';\n\nlet audioElement: HTMLAudioElement | undefined;\nlet audioContext: AudioContext | undefined;\nlet sounds: Record<CallSound, HTMLAudioElement>;\n\n// Workaround: this function is called once on the first user interaction.\n// After that, it will be possible to play the notification on iOS without problems.\n// https://rosswintle.uk/2019/01/skirting-the-ios-safari-audio-auto-play-policy-for-ui-sound-effects/\nexport function initializeSoundsForSafari() {\n  initializeSounds();\n\n  return Promise.all(Object.values(sounds).map((sound) => {\n    const prevSrc = sound.src;\n    sound.src = silentSound;\n    sound.muted = true;\n    sound.volume = 0.0001;\n    return sound.play()\n      .then(() => {\n        sound.pause();\n        sound.volume = 1;\n        sound.currentTime = 0;\n        sound.muted = false;\n\n        requestNextMutation(() => {\n          sound.src = prevSrc;\n        });\n      });\n  }));\n}\n\nexport function initializeSounds() {\n  if (sounds) {\n    return;\n  }\n  const joinAudio = new Audio('./voicechat_join.mp3');\n  const connectingAudio = new Audio('./voicechat_connecting.mp3');\n  connectingAudio.loop = true;\n  const leaveAudio = new Audio('./voicechat_leave.mp3');\n  const allowTalkAudio = new Audio('./voicechat_onallowtalk.mp3');\n  const busyAudio = new Audio('./call_busy.mp3');\n  const connectAudio = new Audio('./call_connect.mp3');\n  const endAudio = new Audio('./call_end.mp3');\n  const incomingAudio = new Audio('./call_incoming.mp3');\n  incomingAudio.loop = true;\n  const ringingAudio = new Audio('./call_ringing.mp3');\n  ringingAudio.loop = true;\n\n  sounds = {\n    join: joinAudio,\n    allowTalk: allowTalkAudio,\n    leave: leaveAudio,\n    connecting: connectingAudio,\n    incoming: incomingAudio,\n    end: endAudio,\n    connect: connectAudio,\n    busy: busyAudio,\n    ringing: ringingAudio,\n  };\n}\n\nasync function fetchGroupCall<T extends GlobalState>(global: T, groupCall: Partial<ApiGroupCall>) {\n  if (selectIsCurrentUserFrozen(global)) return undefined;\n  const result = await callApi('getGroupCall', {\n    call: groupCall,\n  });\n\n  if (!result) return undefined;\n\n  global = getGlobal();\n\n  const existingGroupCall = selectGroupCall(global, groupCall.id!);\n\n  global = updateGroupCall(\n    global,\n    groupCall.id!,\n    omit(result.groupCall, ['connectionState']),\n    undefined,\n    existingGroupCall?.isLoaded ? undefined : result.groupCall.participantsCount,\n  );\n\n  setGlobal(global);\n\n  return result.groupCall;\n}\n\nfunction requestGroupCallParticipants(\n  groupCall: Partial<ApiGroupCall>, nextOffset?: string,\n) {\n  return callApi('fetchGroupCallParticipants', {\n    call: groupCall as ApiGroupCall,\n    offset: nextOffset,\n  });\n}\n\naddActionHandler('toggleGroupCallPanel', (global, actions, payload): ActionReturnType => {\n  const { force, tabId = getCurrentTabId() } = payload || {};\n  return updateTabState(global, {\n    isCallPanelVisible: 'force' in (payload || {}) ? force : !selectTabState(global, tabId).isCallPanelVisible,\n  }, tabId);\n});\n\naddActionHandler('createGroupCall', async (global, actions, payload): Promise<void> => {\n  const { chatId, tabId = getCurrentTabId() } = payload;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  const result = await callApi('createGroupCall', {\n    peer: chat,\n  });\n\n  if (!result) return;\n\n  global = getGlobal();\n  global = updateGroupCall(global, result.id, {\n    ...result,\n    chatId,\n  });\n  setGlobal(global);\n\n  actions.requestMasterAndJoinGroupCall({ id: result.id, accessHash: result.accessHash, tabId });\n});\n\naddActionHandler('createGroupCallInviteLink', async (global, actions, payload): Promise<void> => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  const groupCall = selectActiveGroupCall(global);\n\n  if (!groupCall || !groupCall.chatId) {\n    return;\n  }\n\n  const chat = selectChat(global, groupCall.chatId);\n  if (!chat) {\n    return;\n  }\n\n  const hasPublicUsername = Boolean(getMainUsername(chat));\n\n  let inviteLink = selectChatFullInfo(global, chat.id)?.inviteLink;\n  if (hasPublicUsername) {\n    inviteLink = await callApi('exportGroupCallInvite', {\n      call: groupCall,\n      canSelfUnmute: false,\n    });\n  }\n\n  if (!inviteLink) {\n    return;\n  }\n\n  copyTextToClipboard(inviteLink);\n  actions.showNotification({\n    message: {\n      key: 'LinkCopied',\n    },\n    tabId,\n  });\n});\n\naddActionHandler('joinVoiceChatByLink', async (global, actions, payload): Promise<void> => {\n  const { username, inviteHash, tabId = getCurrentTabId() } = payload;\n\n  const chat = await fetchChatByUsername(global, username);\n\n  if (!chat) {\n    actions.showNotification({ message: langProvider.oldTranslate('NoUsernameFound'), tabId });\n    return;\n  }\n\n  global = getGlobal();\n  const full = await loadFullChat(global, actions, chat);\n\n  if (full?.groupCall) {\n    actions.requestMasterAndJoinGroupCall({\n      id: full.groupCall.id,\n      accessHash: full.groupCall.accessHash,\n      inviteHash,\n      tabId,\n    });\n  }\n});\n\naddActionHandler('requestMasterAndJoinGroupCall', (global, actions, payload): ActionReturnType => {\n  actions.requestMasterAndCallAction({\n    action: 'joinGroupCall',\n    payload,\n    tabId: payload.tabId || getCurrentTabId(),\n  });\n});\n\naddActionHandler('requestMasterAndAcceptCall', (global, actions, payload): ActionReturnType => {\n  actions.requestMasterAndCallAction({\n    action: 'acceptCall',\n    payload: undefined,\n    tabId: payload?.tabId || getCurrentTabId(),\n  });\n});\n\naddActionHandler('joinGroupCall', async (global, actions, payload): Promise<void> => {\n  const {\n    chatId, id, accessHash, inviteHash, tabId = getCurrentTabId(),\n  } = payload;\n\n  if (!ARE_CALLS_SUPPORTED) {\n    actions.showNotification({\n      message: 'Sorry, your browser doesn\\'t support group calls',\n      tabId,\n    });\n    return;\n  }\n\n  if (global.phoneCall) {\n    actions.toggleGroupCallPanel({ tabId });\n    return;\n  }\n\n  createAudioElement();\n\n  initializeSounds();\n  global = getGlobal();\n  void checkNavigatorUserMediaPermissions(global, actions, true, tabId);\n\n  const { groupCalls: { activeGroupCallId } } = global;\n  let groupCall = id ? selectGroupCall(global, id) : selectChatGroupCall(global, chatId!);\n\n  if (groupCall && groupCall.id === activeGroupCallId) {\n    actions.toggleGroupCallPanel({ tabId });\n    return;\n  }\n\n  if (activeGroupCallId) {\n    if ('leaveGroupCall' in actions) {\n      actions.leaveGroupCall({\n        rejoin: payload,\n        tabId,\n      });\n    }\n    return;\n  }\n\n  if (groupCall && activeGroupCallId === groupCall.id) {\n    actions.toggleGroupCallPanel({ tabId });\n    return;\n  }\n\n  if (!groupCall && (!id || !accessHash) && chatId) {\n    const chat = selectChat(global, chatId);\n\n    if (!chat) return;\n\n    await loadFullChat(global, actions, chat);\n    global = getGlobal();\n    groupCall = selectChatGroupCall(global, chatId);\n  } else if (!groupCall && id && accessHash) {\n    groupCall = await fetchGroupCall(global, {\n      id,\n      accessHash,\n    });\n  }\n\n  if (!groupCall) return;\n\n  global = getGlobal();\n  global = updateGroupCall(\n    global,\n    groupCall.id,\n    {\n      ...groupCall,\n      inviteHash,\n    },\n    undefined,\n    groupCall.participantsCount + 1,\n  );\n  global = {\n    ...global,\n    groupCalls: {\n      ...global.groupCalls,\n      activeGroupCallId: groupCall.id,\n    },\n  };\n\n  setGlobal(global);\n\n  actions.toggleGroupCallPanel({ force: false, tabId });\n});\n\naddActionHandler('playGroupCallSound', (global, actions, payload): ActionReturnType => {\n  const { sound } = payload;\n\n  if (!sounds?.[sound]) {\n    return;\n  }\n\n  const doPlay = () => {\n    if (sound !== 'connecting') {\n      sounds.connecting.pause();\n    }\n    if (sound !== 'incoming') {\n      sounds.incoming.pause();\n    }\n    if (sound !== 'ringing') {\n      sounds.ringing.pause();\n    }\n    safePlay(sounds[sound]);\n  };\n\n  doPlay();\n});\n\naddActionHandler('loadMoreGroupCallParticipants', (global): ActionReturnType => {\n  const groupCall = selectActiveGroupCall(global);\n  if (!groupCall) {\n    return;\n  }\n\n  void requestGroupCallParticipants(groupCall, groupCall.nextOffset);\n});\n\naddActionHandler('requestMasterAndRequestCall', (global, actions, payload): ActionReturnType => {\n  actions.requestMasterAndCallAction({\n    action: 'requestCall',\n    payload,\n    tabId: payload.tabId || getCurrentTabId(),\n  });\n});\n\naddActionHandler('requestCall', (global, actions, payload): ActionReturnType => {\n  const { userId, isVideo, tabId = getCurrentTabId() } = payload;\n\n  if (global.phoneCall) {\n    actions.toggleGroupCallPanel({ tabId });\n    return;\n  }\n\n  const user = selectUser(global, userId);\n\n  if (!user) {\n    return;\n  }\n\n  initializeSounds();\n  global = getGlobal();\n  void checkNavigatorUserMediaPermissions(global, actions, isVideo, tabId);\n\n  global = getGlobal();\n  global = {\n    ...global,\n    phoneCall: {\n      id: '',\n      state: 'requesting',\n      participantId: userId,\n      isVideo,\n      adminId: global.currentUserId,\n    },\n  };\n  setGlobal(global);\n\n  actions.toggleGroupCallPanel({ force: false, tabId });\n});\n\nfunction createAudioContext() {\n  return (new (window.AudioContext || (window as any).webkitAudioContext)());\n}\n\nconst silence = (ctx: AudioContext) => {\n  const oscillator = ctx.createOscillator();\n  const dst = oscillator.connect(ctx.createMediaStreamDestination());\n  oscillator.start();\n  return new MediaStream([Object.assign((dst as any).stream.getAudioTracks()[0], { enabled: false })]);\n};\n\nfunction createAudioElement() {\n  const ctx = createAudioContext();\n  audioElement = new Audio();\n  audioContext = ctx;\n  audioElement.srcObject = silence(ctx);\n  safePlay(audioElement);\n}\n\nexport function getGroupCallAudioElement() {\n  return audioElement;\n}\n\nexport function getGroupCallAudioContext() {\n  return audioContext;\n}\n\nexport function removeGroupCallAudioElement() {\n  audioElement?.pause();\n  audioContext = undefined;\n  audioElement = undefined;\n}\n\n// This method is used instead of a navigator.permissions.query to determine permission to use a microphone,\n// because Firefox does not have support for 'microphone' and 'camera' permissions\n// https://github.com/mozilla/standards-positions/issues/19#issuecomment-370158947\nexport function checkNavigatorUserMediaPermissions<T extends GlobalState>(\n  global: T,\n  actions: RequiredGlobalActions, isVideo?: boolean,\n  ...[tabId = getCurrentTabId()]: TabArgs<T>\n) {\n  if (isVideo) {\n    navigator.mediaDevices.getUserMedia({ video: true })\n      .then((stream) => {\n        if (stream.getVideoTracks().length === 0) {\n          actions.showNotification({\n            message: langProvider.oldTranslate('Call.Camera.Error'),\n            tabId,\n          });\n        } else {\n          stream.getTracks().forEach((track) => track.stop());\n          checkMicrophonePermission(global, actions, tabId);\n        }\n      })\n      .catch(() => {\n        actions.showNotification({\n          message: langProvider.oldTranslate('Call.Camera.Error'),\n          tabId,\n        });\n      });\n  } else {\n    checkMicrophonePermission(global, actions, tabId);\n  }\n}\n\nfunction checkMicrophonePermission<T extends GlobalState>(\n  global: T, actions: RequiredGlobalActions, ...[tabId = getCurrentTabId()]: TabArgs<T>\n) {\n  navigator.mediaDevices.getUserMedia({ audio: true })\n    .then((stream) => {\n      if (stream.getAudioTracks().length === 0) {\n        actions.showNotification({\n          message: langProvider.oldTranslate('RequestAcces.Error.HaveNotAccess.Call'),\n          tabId,\n        });\n      } else {\n        stream.getTracks().forEach((track) => track.stop());\n      }\n    })\n    .catch(() => {\n      actions.showNotification({\n        message: langProvider.oldTranslate('RequestAcces.Error.HaveNotAccess.Call'),\n        tabId,\n      });\n    });\n}\n","import type { ApiGroupCall } from '../../api/types';\nimport type { GroupCallParticipant } from '../../lib/secret-sauce';\nimport type { GlobalState } from '../types';\n\nimport { omit } from '../../util/iteratees';\nimport { selectChat } from '../selectors';\nimport { selectGroupCall } from '../selectors/calls';\nimport { updateChatFullInfo } from './chats';\n\nexport function updateGroupCall<T extends GlobalState>(\n  global: T,\n  groupCallId: string,\n  groupCallUpdate: Partial<ApiGroupCall>,\n  addToParticipantCount?: number,\n  resetParticipantCount?: number,\n): T {\n  const unfiltered = Object.values({\n    ...global.groupCalls.byId[groupCallId]?.participants,\n    ...groupCallUpdate.participants,\n  });\n  const filtered = unfiltered.filter(({ isLeft }) => !isLeft);\n  const participants = filtered.reduce((acc: Record<string, GroupCallParticipant>, el) => {\n    acc[el.id] = el;\n    return acc;\n  }, {});\n\n  return {\n    ...global,\n    groupCalls: {\n      ...global.groupCalls,\n      byId: {\n        ...global.groupCalls.byId,\n        [groupCallId]: {\n          ...global.groupCalls.byId[groupCallId],\n          ...omit(groupCallUpdate, ['participantsCount']),\n          ...(addToParticipantCount && {\n            participantsCount: global.groupCalls.byId[groupCallId].participantsCount + addToParticipantCount,\n          }),\n          ...(resetParticipantCount !== undefined && {\n            participantsCount: resetParticipantCount,\n          }),\n          participants,\n        },\n      },\n    },\n  };\n}\n\nexport function removeGroupCall<T extends GlobalState>(\n  global: T,\n  groupCallId: string,\n): T {\n  const groupCall = selectGroupCall(global, groupCallId);\n  if (groupCall && groupCall.chatId) {\n    const chat = selectChat(global, groupCall.chatId);\n    if (chat) {\n      global = updateChatFullInfo(global, groupCall.chatId, {\n        groupCallId: undefined,\n      });\n    }\n  }\n\n  return {\n    ...global,\n    groupCalls: {\n      ...global.groupCalls,\n      byId: {\n        ...omit(global.groupCalls.byId, [groupCallId.toString()]),\n      },\n    },\n  };\n}\n\nexport function updateActiveGroupCall<T extends GlobalState>(\n  global: T,\n  groupCallUpdate: Partial<ApiGroupCall>,\n  resetParticipantCount?: number,\n): T {\n  if (!global.groupCalls.activeGroupCallId) {\n    return global;\n  }\n\n  return updateGroupCall(global,\n    global.groupCalls.activeGroupCallId,\n    groupCallUpdate,\n    undefined,\n    resetParticipantCount);\n}\n\nexport function updateGroupCallParticipant<T extends GlobalState>(\n  global: T,\n  groupCallId: string,\n  userId: string,\n  participantUpdate: Partial<GroupCallParticipant>,\n  noUpdateCount = false,\n): T {\n  const groupCall = selectGroupCall(global, groupCallId);\n  if (!groupCall) {\n    return global;\n  }\n\n  return updateGroupCall(global, groupCallId, {\n    participants: {\n      ...groupCall.participants,\n      [userId]: {\n        ...groupCall.participants[userId],\n        ...participantUpdate,\n      },\n    },\n  }, participantUpdate.isLeft\n    ? (noUpdateCount ? 0 : -1)\n    : (groupCall.participants[userId] || noUpdateCount ? 0 : 1));\n}\n"],"names":["MAIN_THREAD_ID","ChatCreationProgress","ManagementProgress","NewChatMembersProgress","SettingsScreens","ALL_FOLDER_ID","ARCHIVED_FOLDER_ID","CHAT_LIST_LOAD_SLICE","DEBUG","GLOBAL_SUGGESTED_CHANNELS_ID","MAX_INT_32","RE_TG_LINK","SAVED_FOLDER_ID","SERVICE_NOTIFICATIONS_USER_ID","TME_WEB_DOMAINS","TMP_CHAT_ID","TOP_CHAT_MESSAGES_PRELOAD_LIMIT","TOPICS_SLICE","TOPICS_SLICE_SECOND_LOAD","copyTextToClipboard","formatShareText","processDeepLink","isDeepLink","isUserId","getCurrentTabId","getOrderedIds","buildCollectionByKey","omit","pick","unique","isLocalMessageId","langProvider","debounce","pause","throttle","extractCurrentThemeParams","callApi","getIsSavedDialog","isChatArchived","isChatBasicGroup","isChatChannel","isChatSuperGroup","isUserBot","addActionHandler","getGlobal","setGlobal","addChatListIds","addChatMembers","addChats","addMessages","addNotifyExceptions","addSimilarBots","addUsers","addUserStatuses","deleteChatMessages","deletePeerPhoto","deleteTopic","leaveChat","removeChatFromChatLists","replaceChatFullInfo","replaceChatListIds","replaceChatListLoadingParameters","replaceMessages","replaceNotifyExceptions","replaceSimilarChannels","replaceThreadParam","replaceUserStatuses","toggleSimilarChannels","updateChat","updateChatFullInfo","updateChatLastMessageId","updateChatListSecondaryInfo","updateChats","updateChatsLastMessageId","updateListedTopicIds","updateManagementProgress","updateMissingInvitedUsers","updatePeerFullInfo","updateThread","updateThreadInfo","updateTopic","updateTopics","updateUser","updateUsers","updateGroupCall","updateTabState","selectChat","selectChatByUsername","selectChatFolder","selectChatFullInfo","selectChatLastMessageId","selectChatListLoadingParameters","selectChatListType","selectChatMessages","selectCurrentChat","selectCurrentMessageList","selectDraft","selectIsChatPinned","selectIsChatWithSelf","selectIsCurrentUserFrozen","selectLastServiceNotification","selectPeer","selectSimilarChannelIds","selectStickerSet","selectSupportChat","selectTabState","selectThread","selectThreadInfo","selectTopic","selectTopics","selectTopicsInfo","selectUser","selectUserByPhoneNumber","selectGroupCall","selectCurrentLimit","TOP_CHAT_MESSAGES_PRELOAD_INTERVAL","INFINITE_LOOP_MARKER","CHATLIST_LIMIT_ERROR_LIST","Set","runThrottledForLoadTopChats","cb","runDebouncedForLoadFullChat","global","actions","preloadedChatIds","i","currentChatIds","Object","values","byTabId","map","id","tabId","chatId","filter","Boolean","folderAllOrderedIds","nextChatId","find","includes","has","add","loadViewportMessages","threadId","abortChatRequests","abortChatRequestsForCurrentChat","newChatId","newThreadId","currentMessageList","currentChatId","currentThreadId","isChatOpened","isThreadOpened","reduce","accHasChatOpened","accHasThreadOpened","otherTabId","otherMessageList","isSameChat","isSameThread","shouldAbortChatRequests","undefined","payload","type","noForumTopicPanel","shouldReplaceHistory","shouldReplaceLast","processOpenChatOrThread","chat","hasUnreadMark","markChatRead","isChatOnlySummary","user","isMin","requestChatUpdate","otherParams","openThread","currentUserId","isComments","focusMessageId","loadingChatId","loadingThreadId","originalChat","openChat","isForum","originChannelId","originMessageId","threadInfo","thread","listedIds","length","Number","loadingThread","loadingMessageId","openPreviousChat","currentGlobal","result","messageId","showNotification","message","oldTranslate","messages","isCommentsInfo","fromChannelId","fromMessageId","firstMessageId","focusMessage","onError","onLoaded","chatFullInfo","fullInfo","linkedChatId","whenFirstBatchDone","listType","isCallbackFired","chats","isFullyLoaded","console","error","connectionState","authState","loadChats","dialogIds","users","orderedPinnedIds","force","withPhotos","loadChat","loadFullChat","loadMoreProfilePhotos","peerId","shouldInvalidateCache","isUser","fullInfoById","lastLocalMessage","isSavedDialog","limit","forEach","tabChatId","isMuted","mutedUntil","openFrozenAccountModal","settings","isEnabled","isSilentPosting","topicId","title","about","photo","memberIds","discussionChannelId","isChannel","isSuperGroup","chatCreation","progress","InProgress","createdChannel","missingInvitedUsers","isBroadcast","isMegagroup","channel","missingUsers","Error","openLimitReachedModal","showDialog","data","hasErrorKey","channelId","accessHash","Complete","linkDiscussionGroup","userId","shouldRevokeHistory","chatMessages","localMessageIds","keys","createdChat","err","folderId","folder","shouldBePinned","pinnedChatIds","includedChatIds","newPinnedIds","pinnedId","newIncludedChatIds","folderUpdate","isPinned","ids","saved","chatFolders","recommendedChatFolders","recommended","idsToRemove","idsToAdd","isLimitReached","some","includedId","concat","emoticon","orderedIds","byId","maxId","Math","max","recommendedId","description","newFolder","newId","apiUpdate","requestNextFoldersAction","foldersAction","folderIds","readAllMentions","readAllReactions","hasMoreTopics","lastTopic","processedCount","offsetDate","date","offsetTopicId","offsetId","lastMessageId","topics","topic","unreadCount","unreadMentionsCount","unreadReactionsCount","markTopicRead","count","lastTopicMessageId","lastReadInboxMessageId","hash","invite","subscriptionFormId","starsPayment","inputInvoice","subscriptionInfo","status","chatInviteModal","inviteInfo","phoneNumber","startAttach","attach","text","fetchChatByPhoneNumber","replace","openChatWithDraft","openAttachMenuFromLink","url","shouldIgnoreCache","openChatByPhoneNumber","checkChatInvite","openStickerSet","joinVoiceChatByLink","openInvoice","checkChatlistInvite","openChatByUsername","openChatByUsernameAction","openStoryViewerByUsername","checkGiftCode","isProcessed","match","uri","URL","toLowerCase","startsWith","hostname","pathname","window","open","toString","hostParts","split","adaptedPathname","part1","part2","part3","part","decodeURI","params","fromEntries","searchParams","storyId","substr","startattach","username","stickerSetInfo","shortName","slug","chatOrChannelPostId","commentId","comment","isWebApp","checkWebAppExists","shouldTryOpenChat","isInteger","hasOwnProperty","inviteHash","voicechat","livestream","substring","startParam","start","startApp","startapp","mode","originalParts","openUrl","shouldSkipModal","ignoreDeepLinks","usernameOrId","isPrivate","key","fetchChatByUsername","openBoostModal","onChatChanged","choose","ref","timestamp","webAppName","usernames","c","processAttachBotParameters","theme","chatByUsername","hasMainMiniApp","requestMainWebView","botId","channelPostId","action","usernameChat","openMediaFromTimestamp","requestAppWebView","appName","openChatWithParams","ensureIsSuperGroup","isPreHistoryHidden","bannedRights","updatedFullInfo","members","kickedMembers","isBanned","viewMessages","isUnblocked","m","adminRights","customTitle","chatAfterUpdate","adminMembersById","isDismissed","newAdminMembersById","remove","rest","Promise","all","isDeleted","avatarPhotoId","areProfilesEnabled","areSignaturesEnabled","groups","addedById","group","forDiscussionIds","fullChat","activeChatFolder","maxFolders","isBlocked","requestedDraft","offset","membersCount","userStatusesById","setNewChatMembersDialogState","newChatMembersProgress","Loading","Closed","isProtected","enabledReactions","reactionsLimit","toggleStoryRibbon","isShown","isArchived","forumPanelChatId","bot","getAttachBotOrNotify","isForChat","callAttachBot","isFromSideMenu","attachMenu","bots","requestedAttachBotInstall","onConfirm","requestAttachBotInChat","topicsInfo","listedTopicIds","totalCount","offsetTopic","acc","el","accTopic","entries","draftsById","draft","readInboxMessageIdByTopicId","shouldCloseChatOnError","closeForumPanel","openForumPanel","prevIsEnabled","areParticipantsHidden","iconColor","iconEmojiId","createTopicPanel","isLoading","closeCreateTopicPanel","editTopicPanel","closeEditTopicPanel","topicsPinnedLimit","appConfig","chatlistModal","peerIds","peers","currentNotJoinedCount","peer","isNotJoined","existingFolder","folderTitle","variables","options","pluralValue","invites","shareFolderScreen","openSettingsScreen","screen","Folders","pop","isConfirmedForChatlist","isChatList","hasMyInvites","currentIds","suggestions","removal","suggestedPeerIds","deleteFolderDialogModal","detectedLanguage","isTranslationDisabled","isForumAsMessages","similarChannelIds","similarChannels","chatsById","similarBots","paidMessagesStars","chatLink","collectible","inputCollectible","phone","collectibleInfoModal","isFullDraftSync","shouldIgnorePagination","lastLocalServiceMessageId","offsetPeer","nextOffsetPeerId","nextOffsetDate","nextOffsetId","isFirstBatch","shouldReplaceStaleState","isAccountFreeze","withPinned","archived","chatIds","newChats","notifyExceptionById","lastMessageByChatId","idsToUpdateDraft","isLocal","totalChatCount","groupCall","existingGroupCall","participantsCount","stickerSet","localSet","loadStickers","emojiSet","localEmojiSet","migrateChat","supergroup","referrer","localChat","botName","botApp","localUser","isBot","currentChat","isCurrentChat","starRefStartPrefixes","prefix","p","slice","isTopicProcessed","topicResult","startBot","param","newChat","requestNextMutation","ARE_CALLS_SUPPORTED","safePlay","getMainUsername","selectActiveGroupCall","selectChatGroupCall","silentSound","audioElement","audioContext","sounds","initializeSoundsForSafari","initializeSounds","sound","prevSrc","src","muted","volume","play","then","currentTime","joinAudio","Audio","connectingAudio","loop","leaveAudio","allowTalkAudio","busyAudio","connectAudio","endAudio","incomingAudio","ringingAudio","join","allowTalk","leave","connecting","incoming","end","connect","busy","ringing","fetchGroupCall","call","isLoaded","requestGroupCallParticipants","nextOffset","isCallPanelVisible","requestMasterAndJoinGroupCall","hasPublicUsername","inviteLink","canSelfUnmute","full","requestMasterAndCallAction","phoneCall","toggleGroupCallPanel","createAudioElement","checkNavigatorUserMediaPermissions","groupCalls","activeGroupCallId","leaveGroupCall","rejoin","doPlay","isVideo","state","participantId","adminId","createAudioContext","AudioContext","webkitAudioContext","silence","ctx","oscillator","createOscillator","dst","createMediaStreamDestination","MediaStream","assign","stream","getAudioTracks","enabled","srcObject","getGroupCallAudioElement","getGroupCallAudioContext","removeGroupCallAudioElement","navigator","mediaDevices","getUserMedia","video","getVideoTracks","getTracks","track","stop","checkMicrophonePermission","catch","audio","groupCallId","groupCallUpdate","addToParticipantCount","resetParticipantCount","unfiltered","participants","filtered","isLeft","removeGroupCall","updateActiveGroupCall","updateGroupCallParticipant","participantUpdate","noUpdateCount"],"sourceRoot":""}