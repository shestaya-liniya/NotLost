{"version":3,"file":"src_lib_rlottie_RLottie_ts.1f5f9f190dbcc4744cf0.js","mappings":"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","sources":["webpack://telegram-t/./src/lib/rlottie/RLottie.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/launchMediaWorkers.ts"],"sourcesContent":["import { animate } from '../../util/animation';\nimport {\n  IS_ANDROID, IS_IOS, IS_SAFARI,\n} from '../../util/browser/windowEnvironment';\nimport cycleRestrict from '../../util/cycleRestrict';\nimport Deferred from '../../util/Deferred';\nimport generateUniqueId from '../../util/generateUniqueId';\nimport launchMediaWorkers, { MAX_WORKERS } from '../../util/launchMediaWorkers';\nimport { requestMeasure, requestMutation } from '../fasterdom/fasterdom';\n\ninterface Params {\n  size: number;\n  noLoop?: boolean;\n  quality?: number;\n  isLowPriority?: boolean;\n  coords?: { x: number; y: number };\n}\n\nconst WAITING = Symbol('WAITING');\ntype Frame =\n  undefined\n  | typeof WAITING\n  | ImageBitmap;\n\nconst HIGH_PRIORITY_QUALITY = (IS_ANDROID || IS_IOS) ? 0.75 : 1;\nconst LOW_PRIORITY_QUALITY = IS_ANDROID ? 0.5 : 0.75;\nconst LOW_PRIORITY_QUALITY_SIZE_THRESHOLD = 24;\nconst HIGH_PRIORITY_CACHE_MODULO = IS_SAFARI ? 2 : 4;\nconst LOW_PRIORITY_CACHE_MODULO = 0;\nconst CANVAS_CLASS = 'rlottie-canvas';\n\nconst workers = launchMediaWorkers().map(({ connector }) => connector);\nconst instancesByRenderId = new Map<string, RLottie>();\n\nconst PENDING_CANVAS_RESIZES = new WeakMap<HTMLCanvasElement, Promise<void>>();\n\nlet lastWorkerIndex = -1;\n\nclass RLottie {\n  // Config\n\n  private views = new Map<string, {\n    canvas: HTMLCanvasElement;\n    ctx: CanvasRenderingContext2D;\n    isLoaded?: boolean;\n    isPaused?: boolean;\n    isSharedCanvas?: boolean;\n    coords?: Params['coords'];\n    onLoad?: NoneToVoidFunction;\n  }>();\n\n  private imgSize!: number;\n\n  private imageData!: ImageData;\n\n  private msPerFrame = 1000 / 60;\n\n  private reduceFactor = 1;\n\n  private cacheModulo!: number;\n\n  private workerIndex!: number;\n\n  private frames: Frame[] = [];\n\n  private framesCount?: number;\n\n  // State\n\n  private isAnimating = false;\n\n  private isWaiting = true;\n\n  private isEnded = false;\n\n  private isDestroyed = false;\n\n  private isRendererInited = false;\n\n  private approxFrameIndex = 0;\n\n  private prevFrameIndex = -1;\n\n  private stopFrameIndex? = 0;\n\n  private speed = 1;\n\n  private direction: 1 | -1 = 1;\n\n  private lastRenderAt?: number;\n\n  static init(...args: ConstructorParameters<typeof RLottie>) {\n    const [\n      , canvas,\n      renderId,\n      params,\n      viewId = generateUniqueId(), ,\n      onLoad,\n    ] = args;\n    let instance = instancesByRenderId.get(renderId);\n\n    if (!instance) {\n      instance = new RLottie(...args);\n      instancesByRenderId.set(renderId, instance);\n    } else {\n      instance.addView(viewId, canvas, onLoad, params?.coords);\n    }\n\n    return instance;\n  }\n\n  constructor(\n    private tgsUrl: string,\n    private container: HTMLDivElement | HTMLCanvasElement,\n    private renderId: string,\n    private params: Params,\n    viewId: string = generateUniqueId(),\n    private customColor?: [number, number, number],\n    private onLoad?: NoneToVoidFunction | undefined,\n    private onEnded?: (isDestroyed?: boolean) => void,\n    private onLoop?: () => void,\n  ) {\n    this.addView(viewId, container, onLoad, params.coords);\n    this.initConfig();\n    this.initRenderer();\n  }\n\n  public removeView(viewId: string) {\n    const {\n      canvas, ctx, isSharedCanvas, coords,\n    } = this.views.get(viewId)!;\n\n    if (isSharedCanvas) {\n      ctx.clearRect(coords!.x, coords!.y, this.imgSize, this.imgSize);\n    } else {\n      canvas.remove();\n    }\n\n    this.views.delete(viewId);\n\n    if (!this.views.size) {\n      this.destroy();\n    }\n  }\n\n  isPlaying() {\n    return this.isAnimating || this.isWaiting;\n  }\n\n  play(forceRestart = false, viewId?: string) {\n    if (viewId) {\n      this.views.get(viewId)!.isPaused = false;\n    }\n\n    if (this.isEnded && forceRestart) {\n      this.approxFrameIndex = Math.floor(0);\n    }\n\n    this.stopFrameIndex = undefined;\n    this.direction = 1;\n    this.doPlay();\n  }\n\n  pause(viewId?: string) {\n    this.lastRenderAt = undefined;\n\n    if (viewId) {\n      this.views.get(viewId)!.isPaused = true;\n\n      const areAllContainersPaused = Array.from(this.views.values()).every(({ isPaused }) => isPaused);\n      if (!areAllContainersPaused) {\n        return;\n      }\n    }\n\n    if (this.isWaiting) {\n      this.stopFrameIndex = this.approxFrameIndex;\n    } else {\n      this.isAnimating = false;\n    }\n\n    if (!this.params.isLowPriority) {\n      this.frames = this.frames.map((frame, i) => {\n        if (i === this.prevFrameIndex) {\n          return frame;\n        } else {\n          if (frame && frame !== WAITING) {\n            frame.close();\n          }\n\n          return undefined;\n        }\n      });\n    }\n  }\n\n  playSegment([startFrameIndex, stopFrameIndex]: [number, number], forceRestart = false, viewId?: string) {\n    if (viewId) {\n      this.views.get(viewId)!.isPaused = false;\n    }\n\n    const frameIndex = Math.round(this.approxFrameIndex);\n    this.stopFrameIndex = Math.floor(stopFrameIndex / this.reduceFactor);\n    if (frameIndex !== stopFrameIndex || forceRestart) {\n      this.approxFrameIndex = Math.floor(startFrameIndex / this.reduceFactor);\n    }\n    this.direction = startFrameIndex < stopFrameIndex ? 1 : -1;\n\n    this.doPlay();\n  }\n\n  setSpeed(speed: number) {\n    this.speed = speed;\n  }\n\n  setNoLoop(noLoop?: boolean) {\n    this.params.noLoop = noLoop;\n  }\n\n  async setSharedCanvasCoords(viewId: string, newCoords: Params['coords']) {\n    const containerInfo = this.views.get(viewId)!;\n    const {\n      canvas, ctx,\n    } = containerInfo;\n\n    const isCanvasDirty = !canvas.dataset.isJustCleaned || canvas.dataset.isJustCleaned === 'false';\n\n    if (!isCanvasDirty) {\n      await PENDING_CANVAS_RESIZES.get(canvas);\n    }\n\n    let [canvasWidth, canvasHeight] = [canvas.width, canvas.height];\n\n    if (isCanvasDirty) {\n      const sizeFactor = this.calcSizeFactor();\n      ([canvasWidth, canvasHeight] = ensureCanvasSize(canvas, sizeFactor));\n      ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n      canvas.dataset.isJustCleaned = 'true';\n      requestMeasure(() => {\n        canvas.dataset.isJustCleaned = 'false';\n      });\n    }\n\n    containerInfo.coords = {\n      x: Math.round((newCoords?.x || 0) * canvasWidth),\n      y: Math.round((newCoords?.y || 0) * canvasHeight),\n    };\n\n    const frame = this.getFrame(this.prevFrameIndex) || this.getFrame(Math.round(this.approxFrameIndex));\n\n    if (frame && frame !== WAITING) {\n      ctx.drawImage(frame, containerInfo.coords.x, containerInfo.coords.y);\n    }\n  }\n\n  private addView(\n    viewId: string,\n    container: HTMLDivElement | HTMLCanvasElement,\n    onLoad?: NoneToVoidFunction,\n    coords?: Params['coords'],\n  ) {\n    const sizeFactor = this.calcSizeFactor();\n\n    let imgSize: number;\n\n    if (container instanceof HTMLDivElement) {\n      if (!(container.parentNode instanceof HTMLElement)) {\n        throw new Error('[RLottie] Container is not mounted');\n      }\n\n      const { size } = this.params;\n\n      imgSize = Math.round(size * sizeFactor);\n\n      if (!this.imgSize) {\n        this.imgSize = imgSize;\n        this.imageData = new ImageData(imgSize, imgSize);\n      }\n\n      requestMutation(() => {\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d')!;\n\n        canvas.classList.add(CANVAS_CLASS);\n\n        canvas.style.width = `${size}px`;\n        canvas.style.height = `${size}px`;\n\n        canvas.width = imgSize;\n        canvas.height = imgSize;\n\n        container.appendChild(canvas);\n\n        this.views.set(viewId, {\n          canvas, ctx, onLoad,\n        });\n      });\n    } else {\n      if (!container.isConnected) {\n        throw new Error('[RLottie] Shared canvas is not mounted');\n      }\n\n      const canvas = container;\n      const ctx = canvas.getContext('2d')!;\n\n      imgSize = Math.round(this.params.size * sizeFactor);\n\n      if (!this.imgSize) {\n        this.imgSize = imgSize;\n        this.imageData = new ImageData(imgSize, imgSize);\n      }\n\n      const [canvasWidth, canvasHeight] = ensureCanvasSize(canvas, sizeFactor);\n\n      this.views.set(viewId, {\n        canvas,\n        ctx,\n        isSharedCanvas: true,\n        coords: {\n          x: Math.round(coords!.x * canvasWidth),\n          y: Math.round(coords!.y * canvasHeight),\n        },\n        onLoad,\n      });\n    }\n\n    if (this.isRendererInited) {\n      this.doPlay();\n    }\n  }\n\n  private calcSizeFactor() {\n    const {\n      size,\n      isLowPriority,\n      // Reduced quality only looks acceptable on big enough images\n      quality = isLowPriority && (!size || size > LOW_PRIORITY_QUALITY_SIZE_THRESHOLD)\n        ? LOW_PRIORITY_QUALITY : HIGH_PRIORITY_QUALITY,\n    } = this.params;\n\n    // Reduced quality only looks acceptable on high DPR screens\n    return Math.max(window.devicePixelRatio * quality, 1);\n  }\n\n  private destroy() {\n    this.isDestroyed = true;\n    this.pause();\n    this.clearCache();\n    this.destroyRenderer();\n\n    instancesByRenderId.delete(this.renderId);\n  }\n\n  private clearCache() {\n    this.frames.forEach((frame) => {\n      if (frame && frame !== WAITING) {\n        frame.close();\n      }\n    });\n\n    // Help GC\n    this.imageData = undefined as any;\n    this.frames = [];\n  }\n\n  private initConfig() {\n    const { isLowPriority } = this.params;\n\n    this.cacheModulo = isLowPriority ? LOW_PRIORITY_CACHE_MODULO : HIGH_PRIORITY_CACHE_MODULO;\n  }\n\n  setColor(newColor: [number, number, number] | undefined) {\n    this.customColor = newColor;\n  }\n\n  private initRenderer() {\n    this.workerIndex = cycleRestrict(MAX_WORKERS, ++lastWorkerIndex);\n\n    workers[this.workerIndex].request({\n      name: 'rlottie:init',\n      args: [\n        this.renderId,\n        this.tgsUrl,\n        this.imgSize,\n        this.params.isLowPriority || false,\n        this.customColor,\n        this.onRendererInit.bind(this),\n      ],\n    });\n  }\n\n  private destroyRenderer() {\n    workers[this.workerIndex].request({\n      name: 'rlottie:destroy',\n      args: [this.renderId],\n    });\n  }\n\n  private onRendererInit(reduceFactor: number, msPerFrame: number, framesCount: number) {\n    this.isRendererInited = true;\n    this.reduceFactor = reduceFactor;\n    this.msPerFrame = msPerFrame;\n    this.framesCount = framesCount;\n\n    if (this.isWaiting) {\n      this.doPlay();\n    }\n  }\n\n  changeData(tgsUrl: string) {\n    this.pause();\n    this.tgsUrl = tgsUrl;\n    this.initConfig();\n\n    workers[this.workerIndex].request({\n      name: 'rlottie:changeData',\n      args: [\n        this.renderId,\n        this.tgsUrl,\n        this.params.isLowPriority || false,\n        this.onChangeData.bind(this),\n      ],\n    });\n  }\n\n  private onChangeData(reduceFactor: number, msPerFrame: number, framesCount: number) {\n    this.reduceFactor = reduceFactor;\n    this.msPerFrame = msPerFrame;\n    this.framesCount = framesCount;\n    this.isWaiting = false;\n    this.isAnimating = false;\n\n    this.doPlay();\n  }\n\n  private doPlay() {\n    if (!this.framesCount) {\n      return;\n    }\n\n    if (this.isDestroyed) {\n      return;\n    }\n\n    if (this.isAnimating) {\n      return;\n    }\n\n    if (!this.isWaiting) {\n      this.lastRenderAt = undefined;\n    }\n\n    this.isEnded = false;\n    this.isAnimating = true;\n    this.isWaiting = false;\n\n    animate(() => {\n      if (this.isDestroyed) {\n        return false;\n      }\n\n      // Paused from outside\n      if (!this.isAnimating) {\n        const areAllLoaded = Array.from(this.views.values()).every(({ isLoaded }) => isLoaded);\n        if (areAllLoaded) {\n          return false;\n        }\n      }\n\n      const frameIndex = Math.round(this.approxFrameIndex);\n      const frame = this.getFrame(frameIndex);\n      if (!frame || frame === WAITING) {\n        if (!frame) {\n          this.requestFrame(frameIndex);\n        }\n\n        this.isAnimating = false;\n        this.isWaiting = true;\n        return false;\n      }\n\n      if (this.cacheModulo && frameIndex % this.cacheModulo === 0) {\n        this.cleanupPrevFrame(frameIndex);\n      }\n\n      if (frameIndex !== this.prevFrameIndex) {\n        this.views.forEach((containerData) => {\n          const {\n            ctx, isLoaded, isPaused, coords: { x, y } = {}, onLoad,\n          } = containerData;\n\n          if (!isLoaded || !isPaused) {\n            ctx.clearRect(x || 0, y || 0, this.imgSize, this.imgSize);\n            ctx.drawImage(frame, x || 0, y || 0);\n          }\n\n          if (!isLoaded) {\n            containerData.isLoaded = true;\n            onLoad?.();\n          }\n        });\n\n        this.prevFrameIndex = frameIndex;\n      }\n\n      const now = Date.now();\n      const currentSpeed = this.lastRenderAt ? this.msPerFrame / (now - this.lastRenderAt) : 1;\n      const delta = (this.direction * this.speed) / currentSpeed;\n      const expectedNextFrameIndex = Math.round(this.approxFrameIndex + delta);\n\n      this.lastRenderAt = now;\n\n      // Forward animation finished\n      if (delta > 0 && (frameIndex === this.framesCount! - 1 || expectedNextFrameIndex > this.framesCount! - 1)) {\n        if (this.params.noLoop) {\n          this.isAnimating = false;\n          this.isEnded = true;\n          this.onEnded?.();\n          return false;\n        }\n        this.onLoop?.();\n\n        this.approxFrameIndex = 0;\n\n        // Backward animation finished\n      } else if (delta < 0 && (frameIndex === 0 || expectedNextFrameIndex < 0)) {\n        if (this.params.noLoop) {\n          this.isAnimating = false;\n          this.isEnded = true;\n          this.onEnded?.();\n          return false;\n        }\n        this.onLoop?.();\n\n        this.approxFrameIndex = this.framesCount! - 1;\n\n        // Stop frame reached\n      } else if (\n        this.stopFrameIndex !== undefined\n        && (frameIndex === this.stopFrameIndex\n          || (\n            (delta > 0 && expectedNextFrameIndex > this.stopFrameIndex)\n            || (delta < 0 && expectedNextFrameIndex < this.stopFrameIndex)\n          ))\n      ) {\n        this.stopFrameIndex = undefined;\n        this.isAnimating = false;\n        return false;\n\n        // Preparing next frame\n      } else {\n        this.approxFrameIndex += delta;\n      }\n\n      const nextFrameIndex = Math.round(this.approxFrameIndex);\n\n      if (!this.getFrame(nextFrameIndex)) {\n        this.requestFrame(nextFrameIndex);\n        this.isWaiting = true;\n        this.isAnimating = false;\n        return false;\n      }\n\n      return true;\n    }, requestMutation);\n  }\n\n  private getFrame(frameIndex: number) {\n    return this.frames[frameIndex];\n  }\n\n  private requestFrame(frameIndex: number) {\n    this.frames[frameIndex] = WAITING;\n\n    workers[this.workerIndex].request({\n      name: 'rlottie:renderFrames',\n      args: [this.renderId, frameIndex, this.onFrameLoad.bind(this)],\n    });\n  }\n\n  private cleanupPrevFrame(frameIndex: number) {\n    if (this.framesCount! < 3) {\n      return;\n    }\n\n    const prevFrameIndex = cycleRestrict(this.framesCount!, frameIndex - 1);\n    this.frames[prevFrameIndex] = undefined;\n  }\n\n  private onFrameLoad(frameIndex: number, imageBitmap: ImageBitmap) {\n    if (this.frames[frameIndex] !== WAITING) {\n      return;\n    }\n\n    this.frames[frameIndex] = imageBitmap;\n\n    if (this.isWaiting) {\n      this.doPlay();\n    }\n  }\n}\n\nfunction ensureCanvasSize(canvas: HTMLCanvasElement, sizeFactor: number) {\n  const expectedWidth = Math.round(canvas.offsetWidth * sizeFactor);\n  const expectedHeight = Math.round(canvas.offsetHeight * sizeFactor);\n\n  if (canvas.width !== expectedWidth || canvas.height !== expectedHeight) {\n    const deferred = new Deferred<void>();\n    PENDING_CANVAS_RESIZES.set(canvas, deferred.promise);\n    requestMutation(() => {\n      canvas.width = expectedWidth;\n      canvas.height = expectedHeight;\n      deferred.resolve();\n    });\n  }\n\n  return [expectedWidth, expectedHeight];\n}\n\nexport default RLottie;\n","import generateUniqueId from './generateUniqueId';\nimport { throttleWithTickEnd } from './schedulers';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitPayload = {\n  type: 'init';\n  messageId?: string;\n  args: any;\n};\n\ntype CallMethodPayload = {\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\ntype CancelProgressPayload = {\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport type OriginPayload =\n  InitPayload\n  | CallMethodPayload\n  | CancelProgressPayload;\n\nexport type OriginMessageData = {\n  channel?: string;\n  payloads: OriginPayload[];\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\nexport type ApiUpdate = { type: string } & any;\n\nexport type WorkerPayload =\n  {\n    channel?: string;\n    type: 'update';\n    update: ApiUpdate;\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodResponse';\n    messageId: string;\n    response?: any;\n    error?: { message: string };\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodCallback';\n    messageId: string;\n    callbackArgs: any[];\n  }\n  |\n  {\n    channel?: string;\n    type: 'unhandledError';\n    error?: { message: string };\n  };\n\nexport type WorkerMessageData = {\n  channel?: string;\n  payloads: WorkerPayload[];\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestState {\n  messageId: string;\n  resolve: AnyToVoidFunction;\n  reject: AnyToVoidFunction;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n    transferables?: Transferable[];\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestState>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestState>();\n\n  private pendingPayloads: OriginPayload[] = [];\n\n  private pendingTransferables: Transferable[] = [];\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessageOnTickEnd({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n    const { transferables, ...restMessageData } = messageData;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodPayload = {\n      type: 'callMethod',\n      messageId,\n      ...restMessageData,\n    };\n\n    const requestState = { messageId } as RequestState;\n\n    // Re-wrap type because of `postMessage`\n    const promise = new Promise<any>((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessageOnTickEnd(payload, transferables);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessageOnTickEnd({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    data.payloads.forEach((payload) => {\n      if (payload.type === 'update' && this.onUpdate) {\n        this.onUpdate(payload.update);\n      }\n      if (payload.type === 'methodResponse') {\n        const requestState = requestStates.get(payload.messageId);\n        if (requestState) {\n          if (payload.error) {\n            requestState.reject(payload.error);\n          } else {\n            requestState.resolve(payload.response);\n          }\n        }\n      } else if (payload.type === 'methodCallback') {\n        const requestState = requestStates.get(payload.messageId);\n        requestState?.callback?.(...payload.callbackArgs);\n      } else if (payload.type === 'unhandledError') {\n        throw new Error(payload.error?.message);\n      }\n    });\n  }\n\n  private postMessageOnTickEnd(payload: OriginPayload, transferables?: Transferable[]) {\n    this.pendingPayloads.push(payload);\n\n    if (transferables) {\n      this.pendingTransferables.push(...transferables);\n    }\n\n    this.postMessagesOnTickEnd();\n  }\n\n  private postMessagesOnTickEnd = throttleWithTickEnd(() => {\n    const { channel } = this;\n    const payloads = this.pendingPayloads;\n    const transferables = this.pendingTransferables;\n\n    this.pendingPayloads = [];\n    this.pendingTransferables = [];\n\n    this.target.postMessage({ channel, payloads }, transferables);\n  });\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import type { MediaWorkerApi } from '../lib/mediaWorker/index.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TEST } from '../config';\n\nimport { createConnector } from './PostMessageConnector';\n\nexport const MAX_WORKERS = Math.min(navigator.hardwareConcurrency || 4, 4);\n\nlet instances: {\n  worker: Worker;\n  connector: Connector<MediaWorkerApi>;\n}[] | undefined;\n\nexport default function launchMediaWorkers() {\n  if (IS_TEST) return [];\n  if (!instances) {\n    instances = new Array(MAX_WORKERS).fill(undefined).map(\n      () => {\n        const worker = new Worker(new URL('../lib/mediaWorker/index.worker.ts', import.meta.url));\n        const connector = createConnector<MediaWorkerApi>(worker, undefined, 'media');\n        return { worker, connector };\n      },\n    );\n  }\n\n  return instances;\n}\n\nexport function requestMediaWorker(payload: Parameters<Connector<MediaWorkerApi>['request']>[0], index: number) {\n  return launchMediaWorkers()[index].connector.request(payload);\n}\n"],"names":["animate","IS_ANDROID","IS_IOS","IS_SAFARI","cycleRestrict","Deferred","generateUniqueId","launchMediaWorkers","MAX_WORKERS","requestMeasure","requestMutation","WAITING","Symbol","HIGH_PRIORITY_QUALITY","LOW_PRIORITY_QUALITY","LOW_PRIORITY_QUALITY_SIZE_THRESHOLD","HIGH_PRIORITY_CACHE_MODULO","LOW_PRIORITY_CACHE_MODULO","CANVAS_CLASS","workers","map","connector","instancesByRenderId","Map","PENDING_CANVAS_RESIZES","WeakMap","lastWorkerIndex","RLottie","views","msPerFrame","reduceFactor","frames","isAnimating","isWaiting","isEnded","isDestroyed","isRendererInited","approxFrameIndex","prevFrameIndex","stopFrameIndex","speed","direction","init","args","canvas","renderId","params","viewId","onLoad","instance","get","set","addView","coords","constructor","tgsUrl","container","customColor","onEnded","onLoop","initConfig","initRenderer","removeView","ctx","isSharedCanvas","clearRect","x","y","imgSize","remove","delete","size","destroy","isPlaying","play","forceRestart","isPaused","Math","floor","undefined","doPlay","pause","lastRenderAt","areAllContainersPaused","Array","from","values","every","isLowPriority","frame","i","close","playSegment","startFrameIndex","frameIndex","round","setSpeed","setNoLoop","noLoop","setSharedCanvasCoords","newCoords","containerInfo","isCanvasDirty","dataset","isJustCleaned","canvasWidth","canvasHeight","width","height","sizeFactor","calcSizeFactor","ensureCanvasSize","getFrame","drawImage","HTMLDivElement","parentNode","HTMLElement","Error","imageData","ImageData","document","createElement","getContext","classList","add","style","appendChild","isConnected","quality","max","window","devicePixelRatio","clearCache","destroyRenderer","forEach","cacheModulo","setColor","newColor","workerIndex","request","name","onRendererInit","bind","framesCount","changeData","onChangeData","areAllLoaded","isLoaded","requestFrame","cleanupPrevFrame","containerData","now","Date","currentSpeed","delta","expectedNextFrameIndex","nextFrameIndex","onFrameLoad","imageBitmap","expectedWidth","offsetWidth","expectedHeight","offsetHeight","deferred","promise","resolve","throttleWithTickEnd","ConnectorClass","requestStates","requestStatesByCallback","pendingPayloads","pendingTransferables","target","onUpdate","channel","postMessageOnTickEnd","type","messageData","transferables","restMessageData","messageId","payload","requestState","Promise","reject","Object","assign","length","withCallback","callback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","data","payloads","update","error","response","callbackArgs","message","push","postMessagesOnTickEnd","postMessage","createConnector","worker","handleMessage","addEventListener","removeEventListener","index","IS_TEST","min","navigator","hardwareConcurrency","instances","fill","Worker","URL","import","meta","url","requestMediaWorker"],"sourceRoot":""}