{"version":3,"file":"src_components_common_PeerBadge_tsx-src_components_common_pickers_PickerModal_tsx-src_compone-326c9b.8ddcec0353d6e16499a9.js","mappings":"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","sources":["webpack://telegram-t/./src/components/common/PeerBadge.module.scss?732c","webpack://telegram-t/./src/components/common/PeerBadge.tsx","webpack://telegram-t/./src/components/common/pickers/PickerModal.module.scss?7af2","webpack://telegram-t/./src/components/common/pickers/PickerModal.tsx","webpack://telegram-t/./src/components/modals/common/TableAboutModal.module.scss?0459","webpack://telegram-t/./src/components/modals/common/TableAboutModal.tsx","webpack://telegram-t/./src/components/modals/common/TableInfoModal.module.scss?4f33","webpack://telegram-t/./src/components/modals/common/TableInfoModal.tsx","webpack://telegram-t/./src/components/modals/stars/StarTopupOptionList.module.scss?22c9","webpack://telegram-t/./src/components/modals/stars/StarTopupOptionList.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"root\":\"PeerBadge-module__root\",\"top\":\"PeerBadge-module__top\",\"badge\":\"PeerBadge-module__badge\",\"text\":\"PeerBadge-module__text\"};","import { memo } from '../../lib/teact/teact';\n\nimport type { ApiPeer, ApiWebDocument } from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar, { type AvatarSize } from './Avatar';\nimport Icon from './icons/Icon';\n\nimport styles from './PeerBadge.module.scss';\n\ntype OwnProps = {\n  peer?: ApiPeer | CustomPeer;\n  avatarWebPhoto?: ApiWebDocument;\n  avatarSize?: AvatarSize;\n  text?: string;\n  badgeText?: string;\n  badgeIcon?: IconName;\n  className?: string;\n  badgeClassName?: string;\n  badgeIconClassName?: string;\n  textClassName?: string;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PeerBadge = ({\n  peer: avatarPeer,\n  avatarWebPhoto,\n  avatarSize,\n  text,\n  badgeText,\n  badgeIcon,\n  className,\n  badgeClassName,\n  badgeIconClassName,\n  textClassName,\n  onClick,\n}: OwnProps) => {\n  const lang = useLang();\n  return (\n    <div\n      className={buildClassName(styles.root, onClick && styles.clickable, className)}\n      onClick={onClick}\n    >\n      <div className={styles.top}>\n        <Avatar size={avatarSize} peer={avatarPeer} webPhoto={avatarWebPhoto} />\n        {badgeText && (\n          <div className={buildClassName(styles.badge, badgeClassName)} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n            {badgeIcon && <Icon name={badgeIcon} className={badgeIconClassName} />}\n            {badgeText}\n          </div>\n        )}\n      </div>\n      {text && <p className={buildClassName(styles.text, textClassName)}>{text}</p>}\n    </div>\n  );\n};\n\nexport default memo(PeerBadge);\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"PickerModal-module__content\",\"fixedHeight\":\"PickerModal-module__fixedHeight\",\"withSearch\":\"PickerModal-module__withSearch\",\"header\":\"PickerModal-module__header\",\"buttonWrapper\":\"PickerModal-module__buttonWrapper\"};","import { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Modal, { type OwnProps as ModalProps } from '../../ui/Modal';\n\nimport styles from './PickerModal.module.scss';\n\ntype OwnProps = {\n  confirmButtonText?: string;\n  isConfirmDisabled?: boolean;\n  shouldAdaptToSearch?: boolean;\n  withFixedHeight?: boolean;\n  withPremiumGradient?: boolean;\n  onConfirm?: NoneToVoidFunction;\n} & ModalProps;\n\nconst PickerModal = ({\n  confirmButtonText,\n  isConfirmDisabled,\n  shouldAdaptToSearch,\n  withFixedHeight,\n  onConfirm,\n  withPremiumGradient,\n  ...modalProps\n}: OwnProps) => {\n  const lang = useOldLang();\n  const hasButton = Boolean(confirmButtonText || onConfirm);\n\n  return (\n    <Modal\n\n      {...modalProps}\n      isSlim\n      className={buildClassName(\n        shouldAdaptToSearch && styles.withSearch,\n        withFixedHeight && styles.fixedHeight,\n        modalProps.className,\n      )}\n      contentClassName={buildClassName(styles.content, modalProps.contentClassName)}\n      headerClassName={buildClassName(styles.header, modalProps.headerClassName)}\n    >\n      {modalProps.children}\n      {hasButton && (\n        <div className={styles.buttonWrapper}>\n          <Button\n            withPremiumGradient={withPremiumGradient}\n            onClick={onConfirm || modalProps.onClose}\n            color=\"primary\"\n            size=\"smaller\"\n            disabled={isConfirmDisabled}\n          >\n            {confirmButtonText || lang('Confirm')}\n          </Button>\n        </div>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(PickerModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"TableAboutModal-module__root\",\"title\":\"TableAboutModal-module__title\",\"description\":\"TableAboutModal-module__description\",\"secondary\":\"TableAboutModal-module__secondary\",\"topIcon\":\"TableAboutModal-module__topIcon\",\"listItemIcon\":\"TableAboutModal-module__listItemIcon\",\"content\":\"TableAboutModal-module__content\",\"separator\":\"TableAboutModal-module__separator\"};","import { memo, type TeactNode } from '../../../lib/teact/teact';\n\nimport type { IconName } from '../../../types/icons';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Separator from '../../ui/Separator';\n\nimport styles from './TableAboutModal.module.scss';\n\nexport type TableAboutData = [IconName | undefined, TeactNode, TeactNode][];\n\ntype OwnProps = {\n  contentClassName?: string;\n  isOpen?: boolean;\n  listItemData?: TableAboutData;\n  headerIconName?: IconName;\n  header?: TeactNode;\n  footer?: TeactNode;\n  buttonText?: string;\n  hasBackdrop?: boolean;\n  withSeparator?: boolean;\n  onClose: NoneToVoidFunction;\n  onButtonClick?: NoneToVoidFunction;\n};\n\nconst TableAboutModal = ({\n  isOpen,\n  listItemData,\n  headerIconName,\n  header,\n  footer,\n  buttonText,\n  hasBackdrop,\n  withSeparator,\n  onClose,\n  onButtonClick,\n  contentClassName,\n}: OwnProps) => {\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={buildClassName(styles.root, contentClassName)}\n      contentClassName={styles.content}\n      hasAbsoluteCloseButton\n      absoluteCloseButtonColor={hasBackdrop ? 'translucent-white' : undefined}\n      onClose={onClose}\n    >\n      {headerIconName && <div className={styles.topIcon}><Icon name={headerIconName} /></div>}\n      {header}\n      <div>\n        {listItemData?.map(([icon, title, subtitle]) => {\n          return (\n            <ListItem\n              isStatic\n              multiline\n              icon={icon}\n              iconClassName={styles.listItemIcon}\n            >\n              <span className=\"title\">{title}</span>\n              <span className=\"subtitle\">{subtitle}</span>\n            </ListItem>\n          );\n        })}\n      </div>\n      {withSeparator && <Separator className={styles.separator} />}\n      {footer}\n      {buttonText && (\n        <Button size=\"smaller\" onClick={onButtonClick || onClose}>{buttonText}</Button>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(TableAboutModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"TableInfoModal-module__content\",\"title\":\"TableInfoModal-module__title\",\"value\":\"TableInfoModal-module__value\",\"table\":\"TableInfoModal-module__table\",\"noFooter\":\"TableInfoModal-module__noFooter\",\"cell\":\"TableInfoModal-module__cell\",\"fullWidth\":\"TableInfoModal-module__fullWidth\",\"avatar\":\"TableInfoModal-module__avatar\",\"chatItem\":\"TableInfoModal-module__chatItem\"};","import { memo, type TeactNode } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPeer } from '../../../api/types';\nimport type { CustomPeer } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './TableInfoModal.module.scss';\n\ntype ChatItem = { chatId: string; withEmojiStatus?: boolean };\n\nexport type TableData = [TeactNode | undefined, TeactNode | ChatItem][];\n\ntype OwnProps = {\n  isOpen?: boolean;\n  title?: string;\n  tableData?: TableData;\n  headerAvatarPeer?: ApiPeer | CustomPeer;\n  header?: TeactNode;\n  modalHeader?: TeactNode;\n  footer?: TeactNode;\n  buttonText?: string;\n  className?: string;\n  hasBackdrop?: boolean;\n  onClose: NoneToVoidFunction;\n  onButtonClick?: NoneToVoidFunction;\n  withBalanceBar?: boolean;\n  isLowStackPriority?: true;\n};\n\nconst TableInfoModal = ({\n  isOpen,\n  title,\n  tableData,\n  headerAvatarPeer,\n  header,\n  modalHeader,\n  footer,\n  buttonText,\n  className,\n  hasBackdrop,\n  onClose,\n  onButtonClick,\n  withBalanceBar,\n  isLowStackPriority,\n}: OwnProps) => {\n  const { openChat } = getActions();\n  const handleOpenChat = useLastCallback((peerId: string) => {\n    openChat({ id: peerId });\n    onClose();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton={Boolean(title)}\n      hasAbsoluteCloseButton={!title}\n      absoluteCloseButtonColor={hasBackdrop ? 'translucent-white' : undefined}\n      isSlim\n      header={modalHeader}\n      title={title}\n      className={className}\n      contentClassName={styles.content}\n      onClose={onClose}\n      withBalanceBar={withBalanceBar}\n      isLowStackPriority={isLowStackPriority}\n    >\n      {headerAvatarPeer && (\n        <Avatar peer={headerAvatarPeer} size=\"jumbo\" className={styles.avatar} />\n      )}\n      {header}\n      <div className={styles.table}>\n        {tableData?.map(([label, value]) => (\n          <>\n            {Boolean(label) && <div className={buildClassName(styles.cell, styles.title)}>{label}</div>}\n            <div className={buildClassName(styles.cell, styles.value, !label && styles.fullWidth)}>\n              {typeof value === 'object' && 'chatId' in value ? (\n                <PeerChip\n                  peerId={value.chatId}\n                  className={styles.chatItem}\n                  forceShowSelf\n                  withEmojiStatus={value.withEmojiStatus}\n                  clickArg={value.chatId}\n                  onClick={handleOpenChat}\n                />\n              ) : value}\n            </div>\n          </>\n        ))}\n      </div>\n      {footer}\n      {buttonText && (\n        <Button\n          className={!footer ? styles.noFooter : undefined}\n          size=\"smaller\"\n          onClick={onButtonClick || onClose}\n        >\n          {buttonText}\n        </Button>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(TableInfoModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"options\":\"StarTopupOptionList-module__options\",\"option\":\"StarTopupOptionList-module__option\",\"active\":\"StarTopupOptionList-module__active\",\"wideOption\":\"StarTopupOptionList-module__wideOption\",\"optionTop\":\"StarTopupOptionList-module__optionTop\",\"stackedStars\":\"StarTopupOptionList-module__stackedStars\",\"stackedStar\":\"StarTopupOptionList-module__stackedStar\",\"optionBottom\":\"StarTopupOptionList-module__optionBottom\",\"moreOptions\":\"StarTopupOptionList-module__moreOptions\",\"iconDown\":\"StarTopupOptionList-module__iconDown\"};","import type { FC } from '../../../lib/teact/teact';\nimport {\n  memo, useEffect, useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiStarGiveawayOption, ApiStarTopupOption } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport Button from '../../ui/Button';\n\nimport styles from './StarTopupOptionList.module.scss';\n\nconst MAX_STARS_COUNT = 6;\n\ntype OwnProps = {\n  isActive?: boolean;\n  options?: ApiStarTopupOption[] | ApiStarGiveawayOption[];\n  selectedStarOption?: ApiStarTopupOption | ApiStarGiveawayOption;\n  selectedStarCount?: number;\n  starsNeeded?: number;\n  className?: string;\n  onClick: (option: ApiStarTopupOption | ApiStarGiveawayOption) => void;\n};\n\nconst StarTopupOptionList: FC<OwnProps> = ({\n  isActive,\n  className,\n  options,\n  selectedStarOption,\n  selectedStarCount,\n  starsNeeded,\n  onClick,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [areOptionsExtended, markOptionsExtended, unmarkOptionsExtended] = useFlag();\n\n  useEffect(() => {\n    if (!isActive) {\n      unmarkOptionsExtended();\n    }\n  }, [isActive]);\n\n  const [renderingOptions, canExtend] = useMemo(() => {\n    if (!options) return [undefined, false];\n\n    const maxOption = options.reduce((max, option) => (\n      max.stars > option.stars ? max : option\n    ));\n    const forceShowAll = starsNeeded && maxOption.stars < starsNeeded;\n\n    const result: { option: ApiStarTopupOption | ApiStarGiveawayOption; starsCount: number; isWide: boolean }[] = [];\n    let currentStackedStarsCount = 0;\n    let canExtendOptions = false;\n    options.forEach((option, index) => {\n      if (!option.isExtended) currentStackedStarsCount++;\n\n      if (starsNeeded && !forceShowAll && option.stars < starsNeeded) return;\n      if (!areOptionsExtended && option.isExtended) {\n        canExtendOptions = true;\n        return;\n      }\n      result.push({\n        option,\n        starsCount: Math.min(currentStackedStarsCount, MAX_STARS_COUNT),\n        isWide: index === options.length - 1,\n      });\n    });\n\n    return [result, canExtendOptions];\n  }, [areOptionsExtended, options, starsNeeded]);\n\n  return (\n    <div className={buildClassName(styles.options, className)}>\n      {renderingOptions?.map(({ option, starsCount, isWide }) => {\n        const length = renderingOptions?.length;\n        const isOdd = length % 2 === 0;\n        const isActiveOption = option === selectedStarOption;\n\n        let perUserStarCount;\n        if (option && 'winners' in option) {\n          const winner = option.winners.find((opt) => opt.users === selectedStarCount)\n            || option.winners.reduce((max, opt) => (opt.users > max.users ? opt : max), option.winners[0]);\n          perUserStarCount = winner?.perUserStars;\n        }\n\n        return (\n          <div\n            className={buildClassName(\n              styles.option, (!isOdd && isWide) && styles.wideOption, isActiveOption && styles.active,\n            )}\n            key={option.stars}\n            onClick={() => onClick?.(option)}\n          >\n            <div className={styles.optionTop}>\n              +\n              {formatInteger(option.stars)}\n              <div className={styles.stackedStars} dir={lang.isRtl ? 'ltr' : 'rtl'}>\n                {Array.from({ length: starsCount }).map(() => (\n                  <StarIcon className={styles.stackedStar} type=\"gold\" size=\"big\" />\n                ))}\n              </div>\n            </div>\n            <div className={styles.optionBottom}>\n              {formatCurrency(lang, option.amount, option.currency)}\n            </div>\n            {(isActiveOption || (selectedStarOption && 'winners' in selectedStarOption))\n              && Boolean(perUserStarCount) && (\n              <div className={styles.optionBottom}>\n                <div className={styles.perUserStars}>\n                  {renderText(oldLang('BoostGift.Stars.PerUser', formatInteger(perUserStarCount)))}\n                </div>\n              </div>\n            )}\n          </div>\n        );\n      })}\n      {!areOptionsExtended && canExtend && (\n        <Button className={styles.moreOptions} isText noForcedUpperCase onClick={markOptionsExtended}>\n          {oldLang('Stars.Purchase.ShowMore')}\n          <Icon className={styles.iconDown} name=\"down\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StarTopupOptionList);\n"],"names":["memo","buildClassName","useLang","Avatar","Icon","styles","jsx","_jsx","jsxs","_jsxs","PeerBadge","peer","avatarPeer","avatarWebPhoto","avatarSize","text","badgeText","badgeIcon","className","badgeClassName","badgeIconClassName","textClassName","onClick","lang","root","clickable","children","top","size","webPhoto","badge","dir","isRtl","name","useOldLang","Button","Modal","PickerModal","confirmButtonText","isConfirmDisabled","shouldAdaptToSearch","withFixedHeight","onConfirm","withPremiumGradient","modalProps","hasButton","Boolean","isSlim","withSearch","fixedHeight","contentClassName","content","headerClassName","header","buttonWrapper","onClose","color","disabled","ListItem","Separator","TableAboutModal","isOpen","listItemData","headerIconName","footer","buttonText","hasBackdrop","withSeparator","onButtonClick","hasAbsoluteCloseButton","absoluteCloseButtonColor","undefined","topIcon","map","icon","title","subtitle","isStatic","multiline","iconClassName","listItemIcon","separator","getActions","useLastCallback","PeerChip","Fragment","_Fragment","TableInfoModal","tableData","headerAvatarPeer","modalHeader","withBalanceBar","isLowStackPriority","openChat","handleOpenChat","peerId","id","hasCloseButton","avatar","table","label","value","cell","fullWidth","chatId","chatItem","forceShowSelf","withEmojiStatus","clickArg","noFooter","useEffect","useMemo","formatCurrency","formatInteger","renderText","useFlag","StarIcon","MAX_STARS_COUNT","StarTopupOptionList","isActive","options","selectedStarOption","selectedStarCount","starsNeeded","oldLang","areOptionsExtended","markOptionsExtended","unmarkOptionsExtended","renderingOptions","canExtend","maxOption","reduce","max","option","stars","forceShowAll","result","currentStackedStarsCount","canExtendOptions","forEach","index","isExtended","push","starsCount","Math","min","isWide","length","isOdd","isActiveOption","perUserStarCount","winner","winners","find","opt","users","perUserStars","wideOption","active","optionTop","stackedStars","Array","from","stackedStar","type","optionBottom","amount","currency","moreOptions","isText","noForcedUpperCase","iconDown"],"sourceRoot":""}